{"version":3,"file":"esri-leaflet-renderers.js","sources":["../src/Symbols/Symbol.js","../node_modules/leaflet-shape-markers/src/ShapeMarker.js","../node_modules/leaflet-shape-markers/src/CrossMarker.js","../node_modules/leaflet-shape-markers/src/XMarker.js","../node_modules/leaflet-shape-markers/src/SquareMarker.js","../node_modules/leaflet-shape-markers/src/DiamondMarker.js","../src/Symbols/PointSymbol.js","../src/Symbols/LineSymbol.js","../src/Symbols/PolygonSymbol.js","../src/Renderers/Renderer.js","../src/Renderers/ClassBreaksRenderer.js","../src/Renderers/UniqueValueRenderer.js","../src/Renderers/SimpleRenderer.js","../src/FeatureLayerHook.js","../src/EsriLeafletRenderers.js"],"sourcesContent":["import { Class } from 'leaflet';\r\n\r\nexport var Symbol = Class.extend({\r\n  initialize: function (symbolJson, options) {\r\n    this._symbolJson = symbolJson;\r\n    this.val = null;\r\n    this._styles = {};\r\n    this._isDefault = false;\r\n    this._layerTransparency = 1;\r\n    if (options && options.layerTransparency) {\r\n      this._layerTransparency = 1 - (options.layerTransparency / 100.0);\r\n    }\r\n  },\r\n\r\n  // the geojson values returned are in points\r\n  pixelValue: function (pointValue) {\r\n    return pointValue * 1.333;\r\n  },\r\n\r\n  // color is an array [r,g,b,a]\r\n  colorValue: function (color) {\r\n    return 'rgb(' + color[0] + ',' + color[1] + ',' + color[2] + ')';\r\n  },\r\n\r\n  alphaValue: function (color) {\r\n    var alpha = color[3] / 255.0;\r\n    return alpha * this._layerTransparency;\r\n  },\r\n\r\n  getSize: function (feature, sizeInfo) {\r\n    var attr = feature.properties;\r\n    var field = sizeInfo.field;\r\n    var size = 0;\r\n    var featureValue = null;\r\n\r\n    if (field) {\r\n      featureValue = attr[field];\r\n      var minSize = sizeInfo.minSize;\r\n      var maxSize = sizeInfo.maxSize;\r\n      var minDataValue = sizeInfo.minDataValue;\r\n      var maxDataValue = sizeInfo.maxDataValue;\r\n      var featureRatio;\r\n      var normField = sizeInfo.normalizationField;\r\n      var normValue = attr ? parseFloat(attr[normField]) : undefined;\r\n\r\n      if (featureValue === null || (normField && ((isNaN(normValue) || normValue === 0)))) {\r\n        return null;\r\n      }\r\n\r\n      if (!isNaN(normValue)) {\r\n        featureValue /= normValue;\r\n      }\r\n\r\n      if (minSize !== null && maxSize !== null && minDataValue !== null && maxDataValue !== null) {\r\n        if (featureValue <= minDataValue) {\r\n          size = minSize;\r\n        } else if (featureValue >= maxDataValue) {\r\n          size = maxSize;\r\n        } else {\r\n          featureRatio = (featureValue - minDataValue) / (maxDataValue - minDataValue);\r\n          size = minSize + (featureRatio * (maxSize - minSize));\r\n        }\r\n      }\r\n      size = isNaN(size) ? 0 : size;\r\n    }\r\n    return size;\r\n  },\r\n\r\n  getColor: function (feature, colorInfo) {\r\n    // required information to get color\r\n    if (!(feature.properties && colorInfo && colorInfo.field && colorInfo.stops)) {\r\n      return null;\r\n    }\r\n\r\n    var attr = feature.properties;\r\n    var featureValue = attr[colorInfo.field];\r\n    var lowerBoundColor, upperBoundColor, lowerBound, upperBound;\r\n    var normField = colorInfo.normalizationField;\r\n    var normValue = attr ? parseFloat(attr[normField]) : undefined;\r\n    if (featureValue === null || (normField && ((isNaN(normValue) || normValue === 0)))) {\r\n      return null;\r\n    }\r\n\r\n    if (!isNaN(normValue)) {\r\n      featureValue /= normValue;\r\n    }\r\n\r\n    if (featureValue <= colorInfo.stops[0].value) {\r\n      return colorInfo.stops[0].color;\r\n    }\r\n    var lastStop = colorInfo.stops[colorInfo.stops.length - 1];\r\n    if (featureValue >= lastStop.value) {\r\n      return lastStop.color;\r\n    }\r\n\r\n    // go through the stops to find min and max\r\n    for (var i = 0; i < colorInfo.stops.length; i++) {\r\n      var stopInfo = colorInfo.stops[i];\r\n\r\n      if (stopInfo.value <= featureValue) {\r\n        lowerBoundColor = stopInfo.color;\r\n        lowerBound = stopInfo.value;\r\n      } else if (stopInfo.value > featureValue) {\r\n        upperBoundColor = stopInfo.color;\r\n        upperBound = stopInfo.value;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // feature falls between two stops, interplate the colors\r\n    if (!isNaN(lowerBound) && !isNaN(upperBound)) {\r\n      var range = upperBound - lowerBound;\r\n      if (range > 0) {\r\n        // more weight the further it is from the lower bound\r\n        var upperBoundColorWeight = (featureValue - lowerBound) / range;\r\n        if (upperBoundColorWeight) {\r\n          // more weight the further it is from the upper bound\r\n          var lowerBoundColorWeight = (upperBound - featureValue) / range;\r\n          if (lowerBoundColorWeight) {\r\n            // interpolate the lower and upper bound color by applying the\r\n            // weights to each of the rgba colors and adding them together\r\n            var interpolatedColor = [];\r\n            for (var j = 0; j < 4; j++) {\r\n              interpolatedColor[j] = Math.round((lowerBoundColor[j] * lowerBoundColorWeight) + (upperBoundColor[j] * upperBoundColorWeight));\r\n            }\r\n            return interpolatedColor;\r\n          } else {\r\n            // no difference between featureValue and upperBound, 100% of upperBoundColor\r\n            return upperBoundColor;\r\n          }\r\n        } else {\r\n          // no difference between featureValue and lowerBound, 100% of lowerBoundColor\r\n          return lowerBoundColor;\r\n        }\r\n      }\r\n    }\r\n    // if we get to here, none of the cases apply so return null\r\n    return null;\r\n  }\r\n});\r\n\r\n// export function symbol (symbolJson) {\r\n//   return new Symbol(symbolJson);\r\n// }\r\n\r\nexport default Symbol;\r\n","import L from 'leaflet';\n\nexport var ShapeMarker = L.Path.extend({\n\n  initialize: function (latlng, size, options) {\n    L.setOptions(this, options);\n    this._size = size;\n    this._latlng = L.latLng(latlng);\n    this._svgCanvasIncludes();\n  },\n\n  toGeoJSON: function () {\n    return L.GeoJSON.getFeature(this, {\n      type: 'Point',\n      coordinates: L.GeoJSON.latLngToCoords(this.getLatLng())\n    });\n  },\n\n  _svgCanvasIncludes: function () {\n    // implement in sub class\n  },\n\n  _project: function () {\n    this._point = this._map.latLngToLayerPoint(this._latlng);\n  },\n\n  _update: function () {\n    if (this._map) {\n      this._updatePath();\n    }\n  },\n\n  _updatePath: function () {\n    // implement in sub class\n  },\n\n  setLatLng: function (latlng) {\n    this._latlng = L.latLng(latlng);\n    this.redraw();\n    return this.fire('move', {latlng: this._latlng});\n  },\n\n  getLatLng: function () {\n    return this._latlng;\n  },\n\n  setSize: function (size) {\n    this._size = size;\n    return this.redraw();\n  },\n\n  getSize: function () {\n    return this._size;\n  }\n});\n","import L from 'leaflet';\nimport { ShapeMarker } from './ShapeMarker';\n\nexport var CrossMarker = ShapeMarker.extend({\n\n  initialize: function (latlng, size, options) {\n    ShapeMarker.prototype.initialize.call(this, latlng, size, options);\n  },\n\n  _updatePath: function () {\n    this._renderer._updateCrossMarker(this);\n  },\n\n  _svgCanvasIncludes: function () {\n    L.Canvas.include({\n      _updateCrossMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n        var ctx = this._ctx;\n\n        ctx.beginPath();\n        ctx.moveTo(latlng.x, latlng.y + offset);\n        ctx.lineTo(latlng.x, latlng.y - offset);\n        this._fillStroke(ctx, layer);\n\n        ctx.moveTo(latlng.x - offset, latlng.y);\n        ctx.lineTo(latlng.x + offset, latlng.y);\n        this._fillStroke(ctx, layer);\n      }\n    });\n\n    L.SVG.include({\n      _updateCrossMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n\n        if (L.Browser.vml) {\n          latlng._round();\n          offset = Math.round(offset);\n        }\n\n        var str = 'M' + latlng.x + ',' + (latlng.y + offset) +\n          'L' + latlng.x + ',' + (latlng.y - offset) +\n          'M' + (latlng.x - offset) + ',' + latlng.y +\n          'L' + (latlng.x + offset) + ',' + latlng.y;\n\n        this._setPath(layer, str);\n      }\n    });\n  }\n});\n\nexport var crossMarker = function (latlng, size, options) {\n  return new CrossMarker(latlng, size, options);\n};\n\nexport default crossMarker;\n","import L from 'leaflet';\nimport { ShapeMarker } from './ShapeMarker';\n\nexport var XMarker = ShapeMarker.extend({\n\n  initialize: function (latlng, size, options) {\n    ShapeMarker.prototype.initialize.call(this, latlng, size, options);\n  },\n\n  _updatePath: function () {\n    this._renderer._updateXMarker(this);\n  },\n\n  _svgCanvasIncludes: function () {\n    L.Canvas.include({\n      _updateXMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n        var ctx = this._ctx;\n\n        ctx.beginPath();\n\n        ctx.moveTo(latlng.x + offset, latlng.y + offset);\n        ctx.lineTo(latlng.x - offset, latlng.y - offset);\n        this._fillStroke(ctx, layer);\n      }\n    });\n\n    L.SVG.include({\n      _updateXMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n\n        if (L.Browser.vml) {\n          latlng._round();\n          offset = Math.round(offset);\n        }\n\n        var str = 'M' + (latlng.x + offset) + ',' + (latlng.y + offset) +\n          'L' + (latlng.x - offset) + ',' + (latlng.y - offset) +\n          'M' + (latlng.x - offset) + ',' + (latlng.y + offset) +\n          'L' + (latlng.x + offset) + ',' + (latlng.y - offset);\n\n        this._setPath(layer, str);\n      }\n    });\n  }\n});\n\nexport var xMarker = function (latlng, size, options) {\n  return new XMarker(latlng, size, options);\n};\n\nexport default xMarker;\n","import L from 'leaflet';\nimport { ShapeMarker } from './ShapeMarker';\n\nexport var SquareMarker = ShapeMarker.extend({\n  options: {\n    fill: true\n  },\n\n  initialize: function (latlng, size, options) {\n    ShapeMarker.prototype.initialize.call(this, latlng, size, options);\n  },\n\n  _updatePath: function () {\n    this._renderer._updateSquareMarker(this);\n  },\n\n  _svgCanvasIncludes: function () {\n    L.Canvas.include({\n      _updateSquareMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n        var ctx = this._ctx;\n\n        ctx.beginPath();\n\n        ctx.moveTo(latlng.x + offset, latlng.y + offset);\n        ctx.lineTo(latlng.x - offset, latlng.y + offset);\n        ctx.lineTo(latlng.x - offset, latlng.y - offset);\n        ctx.lineTo(latlng.x + offset, latlng.y - offset);\n\n        ctx.closePath();\n\n        this._fillStroke(ctx, layer);\n      }\n    });\n\n    L.SVG.include({\n      _updateSquareMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n\n        if (L.Browser.vml) {\n          latlng._round();\n          offset = Math.round(offset);\n        }\n\n        var str = 'M' + (latlng.x + offset) + ',' + (latlng.y + offset) +\n          'L' + (latlng.x - offset) + ',' + (latlng.y + offset) +\n          'L' + (latlng.x - offset) + ',' + (latlng.y - offset) +\n          'L' + (latlng.x + offset) + ',' + (latlng.y - offset);\n\n        str = str + (L.Browser.svg ? 'z' : 'x');\n\n        this._setPath(layer, str);\n      }\n    });\n  }\n});\n\nexport var squareMarker = function (latlng, size, options) {\n  return new SquareMarker(latlng, size, options);\n};\n\nexport default squareMarker;\n","import L from 'leaflet';\nimport { ShapeMarker } from './ShapeMarker';\n\nexport var DiamondMarker = ShapeMarker.extend({\n  options: {\n    fill: true\n  },\n\n  initialize: function (latlng, size, options) {\n    ShapeMarker.prototype.initialize.call(this, latlng, size, options);\n  },\n\n  _updatePath: function () {\n    this._renderer._updateDiamondMarker(this);\n  },\n\n  _svgCanvasIncludes: function () {\n    L.Canvas.include({\n      _updateDiamondMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n        var ctx = this._ctx;\n\n        ctx.beginPath();\n\n        ctx.moveTo(latlng.x, latlng.y + offset);\n        ctx.lineTo(latlng.x - offset, latlng.y);\n        ctx.lineTo(latlng.x, latlng.y - offset);\n        ctx.lineTo(latlng.x + offset, latlng.y);\n\n        ctx.closePath();\n\n        this._fillStroke(ctx, layer);\n      }\n    });\n\n    L.SVG.include({\n      _updateDiamondMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n\n        if (L.Browser.vml) {\n          latlng._round();\n          offset = Math.round(offset);\n        }\n\n        var str = 'M' + latlng.x + ',' + (latlng.y + offset) +\n          'L' + (latlng.x - offset) + ',' + latlng.y +\n          'L' + latlng.x + ',' + (latlng.y - offset) +\n          'L' + (latlng.x + offset) + ',' + latlng.y;\n\n        str = str + (L.Browser.svg ? 'z' : 'x');\n\n        this._setPath(layer, str);\n      }\n    });\n  }\n});\n\nexport var diamondMarker = function (latlng, size, options) {\n  return new DiamondMarker(latlng, size, options);\n};\n\nexport default diamondMarker;\n","import {\r\n  marker,\r\n  icon as leafletIcon,\r\n  extend,\r\n  circleMarker\r\n} from 'leaflet';\r\nimport Symbol from './Symbol';\r\nimport { squareMarker, xMarker, crossMarker, diamondMarker } from 'leaflet-shape-markers';\r\n\r\nexport var PointSymbol = Symbol.extend({\r\n\r\n  statics: {\r\n    MARKERTYPES: ['esriSMSCircle', 'esriSMSCross', 'esriSMSDiamond', 'esriSMSSquare', 'esriSMSX', 'esriPMS']\r\n  },\r\n\r\n  initialize: function (symbolJson, options) {\r\n    var url;\r\n    Symbol.prototype.initialize.call(this, symbolJson, options);\r\n    if (options) {\r\n      this.serviceUrl = options.url;\r\n    }\r\n    if (symbolJson) {\r\n      if (symbolJson.type === 'esriPMS') {\r\n        var imageUrl = this._symbolJson.url;\r\n        if ((imageUrl && imageUrl.substr(0, 7) === 'http://') || (imageUrl.substr(0, 8) === 'https://')) {\r\n          // web image\r\n          url = this.sanitize(imageUrl);\r\n          this._iconUrl = url;\r\n        } else {\r\n          url = this.serviceUrl + 'images/' + imageUrl;\r\n          this._iconUrl = options && options.token ? url + '?token=' + options.token : url;\r\n        }\r\n        if (symbolJson.imageData) {\r\n          this._iconUrl = 'data:' + symbolJson.contentType + ';base64,' + symbolJson.imageData;\r\n        }\r\n        // leaflet does not allow resizing icons so keep a hash of different\r\n        // icon sizes to try and keep down on the number of icons created\r\n        this._icons = {};\r\n        // create base icon\r\n        this.icon = this._createIcon(this._symbolJson);\r\n      } else {\r\n        this._fillStyles();\r\n      }\r\n    }\r\n  },\r\n\r\n  // prevent html injection in strings\r\n  sanitize: function (str) {\r\n    if (!str) {\r\n      return '';\r\n    }\r\n    var text;\r\n    try {\r\n      // removes html but leaves url link text\r\n      text = str.replace(/<br>/gi, '\\n');\r\n      text = text.replace(/<p.*>/gi, '\\n');\r\n      text = text.replace(/<a.*href='(.*?)'.*>(.*?)<\\/a>/gi, ' $2 ($1) ');\r\n      text = text.replace(/<(?:.|\\s)*?>/g, '');\r\n    } catch (ex) {\r\n      text = null;\r\n    }\r\n    return text;\r\n  },\r\n\r\n  _fillStyles: function () {\r\n    if (this._symbolJson.outline && this._symbolJson.size > 0 && this._symbolJson.outline.style !== 'esriSLSNull') {\r\n      this._styles.stroke = true;\r\n      this._styles.weight = this.pixelValue(this._symbolJson.outline.width);\r\n      this._styles.color = this.colorValue(this._symbolJson.outline.color);\r\n      this._styles.opacity = this.alphaValue(this._symbolJson.outline.color);\r\n    } else {\r\n      this._styles.stroke = false;\r\n    }\r\n    if (this._symbolJson.color) {\r\n      this._styles.fillColor = this.colorValue(this._symbolJson.color);\r\n      this._styles.fillOpacity = this.alphaValue(this._symbolJson.color);\r\n    } else {\r\n      this._styles.fillOpacity = 0;\r\n    }\r\n\r\n    if (this._symbolJson.style === 'esriSMSCircle') {\r\n      this._styles.radius = this.pixelValue(this._symbolJson.size) / 2.0;\r\n    }\r\n  },\r\n\r\n  _createIcon: function (options) {\r\n    var width = this.pixelValue(options.width);\r\n    var height = width;\r\n    if (options.height) {\r\n      height = this.pixelValue(options.height);\r\n    }\r\n    var xOffset = width / 2.0;\r\n    var yOffset = height / 2.0;\r\n\r\n    if (options.xoffset) {\r\n      xOffset += this.pixelValue(options.xoffset);\r\n    }\r\n    if (options.yoffset) {\r\n      yOffset += this.pixelValue(options.yoffset);\r\n    }\r\n\r\n    var icon = leafletIcon({\r\n      iconUrl: this._iconUrl,\r\n      iconSize: [width, height],\r\n      iconAnchor: [xOffset, yOffset]\r\n    });\r\n    this._icons[options.width.toString()] = icon;\r\n    return icon;\r\n  },\r\n\r\n  _getIcon: function (size) {\r\n    // check to see if it is already created by size\r\n    var icon = this._icons[size.toString()];\r\n    if (!icon) {\r\n      icon = this._createIcon({ width: size });\r\n    }\r\n    return icon;\r\n  },\r\n\r\n  pointToLayer: function (geojson, latlng, visualVariables, options) {\r\n    var size = this._symbolJson.size || this._symbolJson.width;\r\n    if (!this._isDefault) {\r\n      if (visualVariables.sizeInfo) {\r\n        var calculatedSize = this.getSize(geojson, visualVariables.sizeInfo);\r\n        if (calculatedSize) {\r\n          size = calculatedSize;\r\n        }\r\n      }\r\n      if (visualVariables.colorInfo) {\r\n        var color = this.getColor(geojson, visualVariables.colorInfo);\r\n        if (color) {\r\n          this._styles.fillColor = this.colorValue(color);\r\n          this._styles.fillOpacity = this.alphaValue(color);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this._symbolJson.type === 'esriPMS') {\r\n      var layerOptions = extend({}, { icon: this._getIcon(size) }, options);\r\n      return marker(latlng, layerOptions);\r\n    }\r\n    size = this.pixelValue(size);\r\n\r\n    switch (this._symbolJson.style) {\r\n      case 'esriSMSSquare':\r\n        return squareMarker(latlng, size, extend({}, this._styles, options));\r\n      case 'esriSMSDiamond':\r\n        return diamondMarker(latlng, size, extend({}, this._styles, options));\r\n      case 'esriSMSCross':\r\n        return crossMarker(latlng, size, extend({}, this._styles, options));\r\n      case 'esriSMSX':\r\n        return xMarker(latlng, size, extend({}, this._styles, options));\r\n    }\r\n    this._styles.radius = size / 2.0;\r\n    return circleMarker(latlng, extend({}, this._styles, options));\r\n  }\r\n});\r\n\r\nexport function pointSymbol (symbolJson, options) {\r\n  return new PointSymbol(symbolJson, options);\r\n}\r\n\r\nexport default pointSymbol;\r\n","import Symbol from './Symbol';\r\n\r\nexport var LineSymbol = Symbol.extend({\r\n  statics: {\r\n    // Not implemented 'esriSLSNull'\r\n    LINETYPES: ['esriSLSDash', 'esriSLSDot', 'esriSLSDashDotDot', 'esriSLSDashDot', 'esriSLSSolid']\r\n  },\r\n  initialize: function (symbolJson, options) {\r\n    Symbol.prototype.initialize.call(this, symbolJson, options);\r\n    this._fillStyles();\r\n  },\r\n\r\n  _fillStyles: function () {\r\n    // set the defaults that show up on arcgis online\r\n    this._styles.lineCap = 'butt';\r\n    this._styles.lineJoin = 'miter';\r\n    this._styles.fill = false;\r\n    this._styles.weight = 0;\r\n\r\n    if (!this._symbolJson) {\r\n      return this._styles;\r\n    }\r\n\r\n    if (this._symbolJson.color) {\r\n      this._styles.color = this.colorValue(this._symbolJson.color);\r\n      this._styles.opacity = this.alphaValue(this._symbolJson.color);\r\n    }\r\n\r\n    if (!isNaN(this._symbolJson.width)) {\r\n      this._styles.weight = this.pixelValue(this._symbolJson.width);\r\n\r\n      var dashValues = [];\r\n\r\n      switch (this._symbolJson.style) {\r\n        case 'esriSLSDash':\r\n          dashValues = [4, 3];\r\n          break;\r\n        case 'esriSLSDot':\r\n          dashValues = [1, 3];\r\n          break;\r\n        case 'esriSLSDashDot':\r\n          dashValues = [8, 3, 1, 3];\r\n          break;\r\n        case 'esriSLSDashDotDot':\r\n          dashValues = [8, 3, 1, 3, 1, 3];\r\n          break;\r\n      }\r\n\r\n      // use the dash values and the line weight to set dash array\r\n      if (dashValues.length > 0) {\r\n        for (var i = 0; i < dashValues.length; i++) {\r\n          dashValues[i] *= this._styles.weight;\r\n        }\r\n\r\n        this._styles.dashArray = dashValues.join(',');\r\n      }\r\n    }\r\n  },\r\n\r\n  style: function (feature, visualVariables) {\r\n    if (!this._isDefault && visualVariables) {\r\n      if (visualVariables.sizeInfo) {\r\n        var calculatedSize = this.pixelValue(this.getSize(feature, visualVariables.sizeInfo));\r\n        if (calculatedSize) {\r\n          this._styles.weight = calculatedSize;\r\n        }\r\n      }\r\n      if (visualVariables.colorInfo) {\r\n        var color = this.getColor(feature, visualVariables.colorInfo);\r\n        if (color) {\r\n          this._styles.color = this.colorValue(color);\r\n          this._styles.opacity = this.alphaValue(color);\r\n        }\r\n      }\r\n    }\r\n    return this._styles;\r\n  }\r\n});\r\n\r\nexport function lineSymbol (symbolJson, options) {\r\n  return new LineSymbol(symbolJson, options);\r\n}\r\n\r\nexport default lineSymbol;\r\n","import Symbol from './Symbol';\r\nimport lineSymbol from './LineSymbol';\r\n\r\nexport var PolygonSymbol = Symbol.extend({\r\n  statics: {\r\n    // not implemented: 'esriSFSBackwardDiagonal','esriSFSCross','esriSFSDiagonalCross','esriSFSForwardDiagonal','esriSFSHorizontal','esriSFSNull','esriSFSVertical'\r\n    POLYGONTYPES: ['esriSFSSolid']\r\n  },\r\n  initialize: function (symbolJson, options) {\r\n    Symbol.prototype.initialize.call(this, symbolJson, options);\r\n    if (symbolJson) {\r\n      if (symbolJson.outline && symbolJson.outline.style === 'esriSLSNull') {\r\n        this._lineStyles = { weight: 0 };\r\n      } else {\r\n        this._lineStyles = lineSymbol(symbolJson.outline, options).style();\r\n      }\r\n      this._fillStyles();\r\n    }\r\n  },\r\n\r\n  _fillStyles: function () {\r\n    if (this._lineStyles) {\r\n      if (this._lineStyles.weight === 0) {\r\n        // when weight is 0, setting the stroke to false can still look bad\r\n        // (gaps between the polygons)\r\n        this._styles.stroke = false;\r\n      } else {\r\n        // copy the line symbol styles into this symbol's styles\r\n        for (var styleAttr in this._lineStyles) {\r\n          this._styles[styleAttr] = this._lineStyles[styleAttr];\r\n        }\r\n      }\r\n    }\r\n\r\n    // set the fill for the polygon\r\n    if (this._symbolJson) {\r\n      if (this._symbolJson.color &&\r\n          // don't fill polygon if type is not supported\r\n          PolygonSymbol.POLYGONTYPES.indexOf(this._symbolJson.style >= 0)) {\r\n        this._styles.fill = true;\r\n        this._styles.fillColor = this.colorValue(this._symbolJson.color);\r\n        this._styles.fillOpacity = this.alphaValue(this._symbolJson.color);\r\n      } else {\r\n        this._styles.fill = false;\r\n        this._styles.fillOpacity = 0;\r\n      }\r\n    }\r\n  },\r\n\r\n  style: function (feature, visualVariables) {\r\n    if (!this._isDefault && visualVariables && visualVariables.colorInfo) {\r\n      var color = this.getColor(feature, visualVariables.colorInfo);\r\n      if (color) {\r\n        this._styles.fillColor = this.colorValue(color);\r\n        this._styles.fillOpacity = this.alphaValue(color);\r\n      }\r\n    }\r\n    return this._styles;\r\n  }\r\n});\r\n\r\nexport function polygonSymbol (symbolJson, options) {\r\n  return new PolygonSymbol(symbolJson, options);\r\n}\r\n\r\nexport default polygonSymbol;\r\n","import { Class, Util, circleMarker } from 'leaflet';\r\n\r\nimport pointSymbol from '../Symbols/PointSymbol';\r\nimport lineSymbol from '../Symbols/LineSymbol';\r\nimport polygonSymbol from '../Symbols/PolygonSymbol';\r\n\r\nexport var Renderer = Class.extend({\r\n  options: {\r\n    proportionalPolygon: false,\r\n    clickable: true\r\n  },\r\n\r\n  initialize: function (rendererJson, options) {\r\n    this._rendererJson = rendererJson;\r\n    this._pointSymbols = false;\r\n    this._symbols = [];\r\n    this._visualVariables = this._parseVisualVariables(rendererJson.visualVariables);\r\n    Util.setOptions(this, options);\r\n  },\r\n\r\n  _parseVisualVariables: function (visualVariables) {\r\n    var visVars = {};\r\n    if (visualVariables) {\r\n      for (var i = 0; i < visualVariables.length; i++) {\r\n        visVars[visualVariables[i].type] = visualVariables[i];\r\n      }\r\n    }\r\n    return visVars;\r\n  },\r\n\r\n  _createDefaultSymbol: function () {\r\n    if (this._rendererJson.defaultSymbol) {\r\n      this._defaultSymbol = this._newSymbol(this._rendererJson.defaultSymbol);\r\n      this._defaultSymbol._isDefault = true;\r\n    }\r\n  },\r\n\r\n  _newSymbol: function (symbolJson) {\r\n    if (symbolJson.type === 'esriSMS' || symbolJson.type === 'esriPMS') {\r\n      this._pointSymbols = true;\r\n      return pointSymbol(symbolJson, this.options);\r\n    }\r\n    if (symbolJson.type === 'esriSLS') {\r\n      return lineSymbol(symbolJson, this.options);\r\n    }\r\n    if (symbolJson.type === 'esriSFS') {\r\n      return polygonSymbol(symbolJson, this.options);\r\n    }\r\n  },\r\n\r\n  _getSymbol: function () {\r\n    // override\r\n  },\r\n\r\n  attachStylesToLayer: function (layer) {\r\n    if (this._pointSymbols) {\r\n      layer.options.pointToLayer = Util.bind(this.pointToLayer, this);\r\n    } else {\r\n      layer.options.style = Util.bind(this.style, this);\r\n      layer._originalStyle = layer.options.style;\r\n    }\r\n  },\r\n\r\n  pointToLayer: function (geojson, latlng) {\r\n    var sym = this._getSymbol(geojson);\r\n    if (sym && sym.pointToLayer) {\r\n      // right now custom panes are the only option pushed through\r\n      return sym.pointToLayer(geojson, latlng, this._visualVariables, this.options);\r\n    }\r\n    // invisible symbology\r\n    return circleMarker(latlng, { radius: 0, opacity: 0 });\r\n  },\r\n\r\n  style: function (feature) {\r\n    var userStyles;\r\n    if (this.options.userDefinedStyle) {\r\n      userStyles = this.options.userDefinedStyle(feature);\r\n    }\r\n    // find the symbol to represent this feature\r\n    var sym = this._getSymbol(feature);\r\n    if (sym) {\r\n      return this.mergeStyles(sym.style(feature, this._visualVariables), userStyles);\r\n    } else {\r\n      // invisible symbology\r\n      return this.mergeStyles({ opacity: 0, fillOpacity: 0 }, userStyles);\r\n    }\r\n  },\r\n\r\n  mergeStyles: function (styles, userStyles) {\r\n    var mergedStyles = {};\r\n    var attr;\r\n    // copy renderer style attributes\r\n    for (attr in styles) {\r\n      if (Object.prototype.hasOwnProperty.call(styles, attr)) {\r\n        mergedStyles[attr] = styles[attr];\r\n      }\r\n    }\r\n    // override with user defined style attributes\r\n    if (userStyles) {\r\n      for (attr in userStyles) {\r\n        if (Object.prototype.hasOwnProperty.call(userStyles, attr)) {\r\n          mergedStyles[attr] = userStyles[attr];\r\n        }\r\n      }\r\n    }\r\n    return mergedStyles;\r\n  }\r\n});\r\n\r\nexport default Renderer;\r\n","import Renderer from './Renderer';\r\n\r\nexport var ClassBreaksRenderer = Renderer.extend({\r\n  initialize: function (rendererJson, options) {\r\n    Renderer.prototype.initialize.call(this, rendererJson, options);\r\n    this._field = this._rendererJson.field;\r\n    if (this._rendererJson.normalizationType && this._rendererJson.normalizationType === 'esriNormalizeByField') {\r\n      this._normalizationField = this._rendererJson.normalizationField;\r\n    }\r\n    this._createSymbols();\r\n  },\r\n\r\n  _createSymbols: function () {\r\n    var symbol;\r\n    var classbreaks = this._rendererJson.classBreakInfos;\r\n\r\n    this._symbols = [];\r\n\r\n    // create a symbol for each class break\r\n    for (var i = classbreaks.length - 1; i >= 0; i--) {\r\n      if (this.options.proportionalPolygon && this._rendererJson.backgroundFillSymbol) {\r\n        symbol = this._newSymbol(this._rendererJson.backgroundFillSymbol);\r\n      } else {\r\n        symbol = this._newSymbol(classbreaks[i].symbol);\r\n      }\r\n      symbol.val = classbreaks[i].classMaxValue;\r\n      this._symbols.push(symbol);\r\n    }\r\n    // sort the symbols in ascending value\r\n    this._symbols.sort(function (a, b) {\r\n      return a.val > b.val ? 1 : -1;\r\n    });\r\n    this._createDefaultSymbol();\r\n    this._maxValue = this._symbols[this._symbols.length - 1].val;\r\n  },\r\n\r\n  _getSymbol: function (feature) {\r\n    var val = feature.properties[this._field];\r\n    if (this._normalizationField) {\r\n      var normValue = feature.properties[this._normalizationField];\r\n      if (!isNaN(normValue) && normValue !== 0) {\r\n        val = val / normValue;\r\n      } else {\r\n        return this._defaultSymbol;\r\n      }\r\n    }\r\n\r\n    if (val > this._maxValue) {\r\n      return this._defaultSymbol;\r\n    }\r\n    var symbol = this._symbols[0];\r\n    for (var i = this._symbols.length - 1; i >= 0; i--) {\r\n      if (val > this._symbols[i].val) {\r\n        break;\r\n      }\r\n      symbol = this._symbols[i];\r\n    }\r\n    return symbol;\r\n  }\r\n});\r\n\r\nexport function classBreaksRenderer (rendererJson, options) {\r\n  return new ClassBreaksRenderer(rendererJson, options);\r\n}\r\n\r\nexport default classBreaksRenderer;\r\n","import Renderer from './Renderer';\r\n\r\nexport var UniqueValueRenderer = Renderer.extend({\r\n  initialize: function (rendererJson, options) {\r\n    Renderer.prototype.initialize.call(this, rendererJson, options);\r\n    this._field = this._rendererJson.field1;\r\n    this._createSymbols();\r\n  },\r\n\r\n  _createSymbols: function () {\r\n    var symbol;\r\n    var uniques = this._rendererJson.uniqueValueInfos;\r\n\r\n    // create a symbol for each unique value\r\n    for (var i = uniques.length - 1; i >= 0; i--) {\r\n      symbol = this._newSymbol(uniques[i].symbol);\r\n      symbol.val = uniques[i].value;\r\n      this._symbols.push(symbol);\r\n    }\r\n    this._createDefaultSymbol();\r\n  },\r\n\r\n  _getSymbol: function (feature) {\r\n    var val = feature.properties[this._field];\r\n    // accumulate values if there is more than one field defined\r\n    if (this._rendererJson.fieldDelimiter && this._rendererJson.field2) {\r\n      var val2 = feature.properties[this._rendererJson.field2];\r\n      if (val2) {\r\n        val += this._rendererJson.fieldDelimiter + val2;\r\n        var val3 = feature.properties[this._rendererJson.field3];\r\n        if (val3) {\r\n          val += this._rendererJson.fieldDelimiter + val3;\r\n        }\r\n      }\r\n    }\r\n\r\n    var symbol = this._defaultSymbol;\r\n    for (var i = this._symbols.length - 1; i >= 0; i--) {\r\n      // using the === operator does not work if the field\r\n      // of the unique renderer is not a string\r\n      /*eslint-disable */\r\n      if (this._symbols[i].val == val) {\r\n        symbol = this._symbols[i];\r\n      }\r\n      /* eslint-enable */\r\n    }\r\n    return symbol;\r\n  }\r\n});\r\n\r\nexport function uniqueValueRenderer (rendererJson, options) {\r\n  return new UniqueValueRenderer(rendererJson, options);\r\n}\r\n\r\nexport default uniqueValueRenderer;\r\n","import Renderer from './Renderer';\r\n\r\nexport var SimpleRenderer = Renderer.extend({\r\n  initialize: function (rendererJson, options) {\r\n    Renderer.prototype.initialize.call(this, rendererJson, options);\r\n    this._createSymbol();\r\n  },\r\n\r\n  _createSymbol: function () {\r\n    if (this._rendererJson.symbol) {\r\n      this._symbols.push(this._newSymbol(this._rendererJson.symbol));\r\n    }\r\n  },\r\n\r\n  _getSymbol: function () {\r\n    return this._symbols[0];\r\n  }\r\n});\r\n\r\nexport function simpleRenderer (rendererJson, options) {\r\n  return new SimpleRenderer(rendererJson, options);\r\n}\r\n\r\nexport default simpleRenderer;\r\n","import { Util, GeoJSON, geoJson } from 'leaflet';\r\nimport * as EsriLeaflet from 'esri-leaflet';\r\nimport EsriLeafletCluster, { FeatureLayer as EsriLeafletClusterFeatureLayer } from 'esri-leaflet-cluster';\r\nimport classBreaksRenderer from './Renderers/ClassBreaksRenderer';\r\nimport uniqueValueRenderer from './Renderers/UniqueValueRenderer';\r\nimport simpleRenderer from './Renderers/SimpleRenderer';\r\n\r\nfunction wireUpRenderers () {\r\n  if (this.options.ignoreRenderer) {\r\n    return;\r\n  }\r\n  var oldOnAdd = Util.bind(this.onAdd, this);\r\n  var oldUnbindPopup = Util.bind(this.unbindPopup, this);\r\n  var oldOnRemove = Util.bind(this.onRemove, this);\r\n\r\n  Util.bind(this.createNewLayer, this);\r\n\r\n  this.onAdd = function (map) {\r\n    this.metadata(function (error, response) {\r\n      if (error) {\r\n        console.warn('failed to load metadata from the service.');\r\n        return;\r\n      } if (response && response.drawingInfo) {\r\n        if (this.options.drawingInfo) {\r\n          // allow L.esri.webmap (and others) to override service symbology with info provided in layer constructor\r\n          response.drawingInfo = this.options.drawingInfo;\r\n        }\r\n\r\n        // the default pane for lines and polygons is 'overlayPane', for points it is 'markerPane'\r\n        if (this.options.pane === 'overlayPane' && response.geometryType === 'esriGeometryPoint') {\r\n          this.options.pane = 'markerPane';\r\n        }\r\n\r\n        this._setRenderers(response);\r\n        oldOnAdd(map);\r\n        this._addPointLayer(map);\r\n      }\r\n    }, this);\r\n  };\r\n\r\n  this.onRemove = function (map) {\r\n    oldOnRemove(map);\r\n    if (this._pointLayer) {\r\n      var pointLayers = this._pointLayer.getLayers();\r\n      for (var i in pointLayers) {\r\n        map.removeLayer(pointLayers[i]);\r\n      }\r\n    }\r\n  };\r\n\r\n  this.unbindPopup = function () {\r\n    oldUnbindPopup();\r\n    if (this._pointLayer) {\r\n      var pointLayers = this._pointLayer.getLayers();\r\n      for (var i in pointLayers) {\r\n        pointLayers[i].unbindPopup();\r\n      }\r\n    }\r\n  };\r\n\r\n  this._addPointLayer = function (map) {\r\n    if (this._pointLayer) {\r\n      this._pointLayer.addTo(map);\r\n      this._pointLayer.bringToFront();\r\n    }\r\n  };\r\n\r\n  this._createPointLayer = function () {\r\n    if (!this._pointLayer) {\r\n      this._pointLayer = geoJson();\r\n      // store the feature ids that have already been added to the map\r\n      this._pointLayerIds = {};\r\n\r\n      if (this._popup) {\r\n        var popupFunction = function (feature, layer) {\r\n          layer.bindPopup(this._popup(feature, layer), this._popupOptions);\r\n        };\r\n        this._pointLayer.options.onEachFeature = Util.bind(popupFunction, this);\r\n      }\r\n    }\r\n  };\r\n\r\n  this.createNewLayer = function (geojson) {\r\n    var fLayer = GeoJSON.geometryToLayer(geojson, this.options);\r\n\r\n    // add a point layer when the polygon is represented as proportional marker symbols\r\n    if (this._hasProportionalSymbols) {\r\n      var centroid = this.getPolygonCentroid(geojson.geometry.coordinates);\r\n      if (!(isNaN(centroid[0]) || isNaN(centroid[0]))) {\r\n        this._createPointLayer();\r\n\r\n        var featureId = geojson.id.toString();\r\n        // only add the feature if it does not already exist on the map\r\n        if (!this._pointLayerIds[featureId]) {\r\n          var pointjson = this.getPointJson(geojson, centroid);\r\n\r\n          this._pointLayer.addData(pointjson);\r\n          this._pointLayerIds[featureId] = true;\r\n        }\r\n\r\n        this._pointLayer.bringToFront();\r\n      }\r\n    }\r\n    return fLayer;\r\n  };\r\n\r\n  this.getPolygonCentroid = function (coordinates) {\r\n    var pts = coordinates[0][0];\r\n    if (pts.length === 2) {\r\n      pts = coordinates[0];\r\n    }\r\n\r\n    var twicearea = 0;\r\n    var x = 0;\r\n    var y = 0;\r\n    var nPts = pts.length;\r\n    var p1;\r\n    var p2;\r\n    var f;\r\n\r\n    for (var i = 0, j = nPts - 1; i < nPts; j = i++) {\r\n      p1 = pts[i]; p2 = pts[j];\r\n      twicearea += p1[0] * p2[1];\r\n      twicearea -= p1[1] * p2[0];\r\n      f = (p1[0] * p2[1]) - (p2[0] * p1[1]);\r\n      x += (p1[0] + p2[0]) * f;\r\n      y += (p1[1] + p2[1]) * f;\r\n    }\r\n    f = twicearea * 3;\r\n    return [x / f, y / f];\r\n  };\r\n\r\n  this.getPointJson = function (geojson, centroid) {\r\n    return {\r\n      type: 'Feature',\r\n      properties: geojson.properties,\r\n      id: geojson.id,\r\n      geometry: {\r\n        type: 'Point',\r\n        coordinates: [centroid[0], centroid[1]]\r\n      }\r\n    };\r\n  };\r\n\r\n  this._checkForProportionalSymbols = function (geometryType, renderer) {\r\n    this._hasProportionalSymbols = false;\r\n    if (geometryType === 'esriGeometryPolygon') {\r\n      if (renderer.backgroundFillSymbol) {\r\n        this._hasProportionalSymbols = true;\r\n      }\r\n      // check to see if the first symbol in the classbreaks is a marker symbol\r\n      if (renderer.classBreakInfos && renderer.classBreakInfos.length) {\r\n        var sym = renderer.classBreakInfos[0].symbol;\r\n        if (sym && (sym.type === 'esriSMS' || sym.type === 'esriPMS')) {\r\n          this._hasProportionalSymbols = true;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  this._setRenderers = function (serviceInfo) {\r\n    var rend;\r\n    var rendererInfo = serviceInfo.drawingInfo.renderer;\r\n\r\n    var options = {\r\n      url: this.options.url\r\n    };\r\n\r\n    if (this.options.token) {\r\n      options.token = this.options.token;\r\n    }\r\n\r\n    if (this.options.pane) {\r\n      options.pane = this.options.pane;\r\n    }\r\n\r\n    if (serviceInfo.drawingInfo.transparency) {\r\n      options.layerTransparency = serviceInfo.drawingInfo.transparency;\r\n    }\r\n\r\n    if (this.options.style) {\r\n      options.userDefinedStyle = this.options.style;\r\n    }\r\n\r\n    switch (rendererInfo.type) {\r\n      case 'classBreaks':\r\n        this._checkForProportionalSymbols(serviceInfo.geometryType, rendererInfo);\r\n        if (this._hasProportionalSymbols) {\r\n          this._createPointLayer();\r\n          var pRend = classBreaksRenderer(rendererInfo, options);\r\n          pRend.attachStylesToLayer(this._pointLayer);\r\n          options.proportionalPolygon = true;\r\n        }\r\n        rend = classBreaksRenderer(rendererInfo, options);\r\n        break;\r\n      case 'uniqueValue':\r\n        rend = uniqueValueRenderer(rendererInfo, options);\r\n        break;\r\n      default:\r\n        rend = simpleRenderer(rendererInfo, options);\r\n    }\r\n    rend.attachStylesToLayer(this);\r\n  };\r\n}\r\n\r\nEsriLeaflet.FeatureLayer.addInitHook(wireUpRenderers);\r\n\r\nif (typeof EsriLeafletCluster !== 'undefined' && EsriLeafletClusterFeatureLayer) {\r\n  EsriLeafletClusterFeatureLayer.addInitHook(wireUpRenderers);\r\n}\r\n","import './FeatureLayerHook';\r\n\r\nimport packageInfo from '../package.json';\r\nvar version = packageInfo.version;\r\nexport { version as VERSION };\r\n\r\nexport { Renderer } from './Renderers/Renderer';\r\nexport { SimpleRenderer, simpleRenderer } from './Renderers/SimpleRenderer';\r\nexport { ClassBreaksRenderer, classBreaksRenderer } from './Renderers/ClassBreaksRenderer';\r\nexport { UniqueValueRenderer, uniqueValueRenderer } from './Renderers/UniqueValueRenderer';\r\n\r\nexport { Symbol } from './Symbols/Symbol';\r\nexport { PointSymbol, pointSymbol } from './Symbols/PointSymbol';\r\nexport { LineSymbol, lineSymbol } from './Symbols/LineSymbol';\r\nexport { PolygonSymbol, polygonSymbol } from './Symbols/PolygonSymbol';\r\n"],"names":["Symbol","Class","extend","initialize","symbolJson","options","this","_symbolJson","val","_styles","_isDefault","_layerTransparency","layerTransparency","pixelValue","pointValue","colorValue","color","alphaValue","getSize","feature","sizeInfo","attr","properties","field","size","featureValue","minSize","maxSize","minDataValue","maxDataValue","normField","normalizationField","normValue","parseFloat","undefined","isNaN","getColor","colorInfo","stops","lowerBoundColor","upperBoundColor","lowerBound","upperBound","value","lastStop","length","i","stopInfo","range","upperBoundColorWeight","lowerBoundColorWeight","interpolatedColor","j","Math","round","ShapeMarker","L","Path","latlng","setOptions","_size","_latlng","latLng","_svgCanvasIncludes","toGeoJSON","GeoJSON","getFeature","type","coordinates","latLngToCoords","getLatLng","_project","_point","_map","latLngToLayerPoint","_update","_updatePath","setLatLng","redraw","fire","setSize","CrossMarker","prototype","call","_renderer","_updateCrossMarker","Canvas","include","layer","offset","ctx","_ctx","beginPath","moveTo","x","y","lineTo","_fillStroke","SVG","Browser","vml","_round","str","_setPath","XMarker","_updateXMarker","SquareMarker","fill","_updateSquareMarker","closePath","svg","DiamondMarker","_updateDiamondMarker","PointSymbol","statics","MARKERTYPES","url","serviceUrl","imageUrl","substr","sanitize","_iconUrl","token","imageData","contentType","_icons","icon","_createIcon","_fillStyles","text","replace","ex","outline","style","stroke","weight","width","opacity","fillColor","fillOpacity","radius","height","xOffset","yOffset","xoffset","yoffset","leafletIcon","iconUrl","iconSize","iconAnchor","toString","_getIcon","pointToLayer","geojson","visualVariables","calculatedSize","layerOptions","marker","squareMarker","diamondMarker","crossMarker","xMarker","circleMarker","pointSymbol","LineSymbol","LINETYPES","lineCap","lineJoin","dashValues","dashArray","join","lineSymbol","PolygonSymbol","POLYGONTYPES","_lineStyles","styleAttr","indexOf","polygonSymbol","Renderer","proportionalPolygon","clickable","rendererJson","_rendererJson","_pointSymbols","_symbols","_visualVariables","_parseVisualVariables","Util","visVars","_createDefaultSymbol","defaultSymbol","_defaultSymbol","_newSymbol","_getSymbol","attachStylesToLayer","bind","_originalStyle","sym","userStyles","userDefinedStyle","mergeStyles","styles","mergedStyles","Object","hasOwnProperty","ClassBreaksRenderer","_field","normalizationType","_normalizationField","_createSymbols","symbol","classbreaks","classBreakInfos","backgroundFillSymbol","classMaxValue","push","sort","a","b","_maxValue","classBreaksRenderer","UniqueValueRenderer","field1","uniques","uniqueValueInfos","fieldDelimiter","field2","val2","val3","field3","uniqueValueRenderer","SimpleRenderer","_createSymbol","simpleRenderer","wireUpRenderers","ignoreRenderer","oldOnAdd","onAdd","oldUnbindPopup","unbindPopup","oldOnRemove","onRemove","createNewLayer","map","metadata","error","response","console","warn","drawingInfo","pane","geometryType","_setRenderers","_addPointLayer","_pointLayer","pointLayers","getLayers","removeLayer","addTo","bringToFront","_createPointLayer","geoJson","_pointLayerIds","_popup","onEachFeature","bindPopup","_popupOptions","fLayer","geometryToLayer","_hasProportionalSymbols","centroid","getPolygonCentroid","geometry","featureId","id","pointjson","getPointJson","addData","pts","p1","p2","f","twicearea","nPts","_checkForProportionalSymbols","renderer","serviceInfo","rend","rendererInfo","transparency","EsriLeaflet","FeatureLayer","addInitHook","EsriLeafletCluster","EsriLeafletClusterFeatureLayer","version"],"mappings":"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"}