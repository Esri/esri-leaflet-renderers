{"version":3,"file":"esri-leaflet-renderers.js","sources":["../package.json","../src/Symbols/Symbol.js","../node_modules/leaflet-shape-markers/src/ShapeMarker.js","../node_modules/leaflet-shape-markers/src/CrossMarker.js","../node_modules/leaflet-shape-markers/src/XMarker.js","../node_modules/leaflet-shape-markers/src/SquareMarker.js","../node_modules/leaflet-shape-markers/src/DiamondMarker.js","../src/Symbols/PointSymbol.js","../src/Symbols/LineSymbol.js","../src/Symbols/PolygonSymbol.js","../src/Renderers/Renderer.js","../src/Renderers/SimpleRenderer.js","../src/Renderers/ClassBreaksRenderer.js","../src/Renderers/UniqueValueRenderer.js","../src/FeatureLayerHook.js"],"sourcesContent":["{\n  \"name\": \"esri-leaflet-renderers\",\n  \"description\": \"esri-leaflet plugin for rendering\",\n  \"version\": \"2.0.3\",\n  \"author\": \"Rachel Nehmer <rnehmer@esri.com>\",\n  \"bugs\": {\n    \"url\": \"https://github.com/esri/esri-leaflet-renderers/issues\"\n  },\n  \"contributors\": [\n    \"Rachel Nehmer <rnehmer@esri.com>\",\n    \"John Gravois <jgravois@esri.com>\"\n  ],\n  \"dependencies\": {\n     \"esri-leaflet\": \"^2.0.0-beta.8\",\n     \"leaflet\": \"^1.0.0-beta.2\",\n     \"leaflet-shape-markers\": \"^1.0.4\"\n  },\n  \"devDependencies\": {\n    \"babelify\": \"^6.1.3\",\n    \"chai\": \"2.3.0\",\n    \"gh-release\": \"^2.0.0\",\n    \"http-server\": \"^0.8.5\",\n    \"isparta\": \"^3.0.3\",\n    \"istanbul\": \"^0.4.2\",\n    \"karma\": \"^0.12.24\",\n    \"karma-chai-sinon\": \"^0.1.3\",\n    \"karma-coverage\": \"^0.5.3\",\n    \"karma-mocha\": \"^0.1.0\",\n    \"karma-mocha-reporter\": \"^0.2.5\",\n    \"karma-phantomjs-launcher\": \"^0.1.4\",\n    \"karma-sourcemap-loader\": \"^0.3.5\",\n    \"mkdirp\": \"^0.5.1\",\n    \"mocha\": \"^2.3.4\",\n    \"phantomjs\": \"^1.9.17\",\n    \"rollup\": \"^0.25.4\",\n    \"rollup-plugin-json\": \"^2.0.0\",\n    \"rollup-plugin-node-resolve\": \"^1.4.0\",\n    \"rollup-plugin-uglify\": \"^0.2.0\",\n    \"semistandard\": \"^7.0.5\",\n    \"sinon\": \"^1.11.1\",\n    \"sinon-chai\": \"2.7.0\",\n    \"uglify-js\": \"^2.4.23\",\n    \"watch\": \"^0.17.1\"\n  },\n  \"homepage\": \"http://esri.github.io/esri-leaflet\",\n  \"jsnext:main\": \"src/EsriLeafletRenderers.js\",\n  \"jspm\": {\n    \"registry\": \"npm\",\n    \"format\": \"es6\",\n    \"main\": \"src/EsriLeafletRenderers.js\"\n  },\n  \"keywords\": [\n    \"arcgis\",\n    \"esri\",\n    \"esri leaflet\",\n    \"gis\",\n    \"leaflet plugin\",\n    \"mapping\",\n    \"renderers\",\n    \"symbology\"\n  ],\n  \"license\": \"Apache-2.0\",\n  \"main\": \"dist/esri-leaflet-renderers-debug.js\",\n  \"browser\": \"dist/esri-leaflet-renderers-debug.js\",\n  \"readmeFilename\": \"README.md\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git@github.com:Esri/esri-leaflet-renderers.git\"\n  },\n  \"scripts\": {\n    \"prebuild\": \"mkdirp dist\",\n    \"build\": \"rollup -c profiles/debug.js & rollup -c profiles/production.js\",\n    \"lint\": \"semistandard src/**/*.js\",\n    \"prepublish\": \"npm run build\",\n    \"pretest\": \"npm run build\",\n    \"release\": \"./scripts/release.sh\",\n    \"start\": \"watch 'npm run build' src & http-server -p 5000 -c-1 -o\",\n    \"test\": \"npm run lint && npm run build && karma start\"\n  }\n}\n","import L from 'leaflet';\n\nexport var Symbol = L.Class.extend({\n  initialize: function (symbolJson, options) {\n    this._symbolJson = symbolJson;\n    this.val = null;\n    this._styles = {};\n    this._isDefault = false;\n    this._layerTransparency = 1;\n    if (options && options.layerTransparency) {\n      this._layerTransparency = 1 - (options.layerTransparency / 100.0);\n    }\n  },\n\n  // the geojson values returned are in points\n  pixelValue: function (pointValue) {\n    return pointValue * 1.333;\n  },\n\n  // color is an array [r,g,b,a]\n  colorValue: function (color) {\n    return 'rgb(' + color[0] + ',' + color[1] + ',' + color[2] + ')';\n  },\n\n  alphaValue: function (color) {\n    var alpha = color[3] / 255.0;\n    return alpha * this._layerTransparency;\n  },\n\n  getSize: function (feature, sizeInfo) {\n    var attr = feature.properties;\n    var field = sizeInfo.field;\n    var size = 0;\n    var featureValue = null;\n\n    if (field) {\n      featureValue = attr[field];\n      var minSize = sizeInfo.minSize;\n      var maxSize = sizeInfo.maxSize;\n      var minDataValue = sizeInfo.minDataValue;\n      var maxDataValue = sizeInfo.maxDataValue;\n      var featureRatio;\n      var normField = sizeInfo.normalizationField;\n      var normValue = attr ? parseFloat(attr[normField]) : undefined;\n\n      if (featureValue === null || (normField && ((isNaN(normValue) || normValue === 0)))) {\n        return null;\n      }\n\n      if (!isNaN(normValue)) {\n        featureValue /= normValue;\n      }\n\n      if (minSize !== null && maxSize !== null && minDataValue !== null && maxDataValue !== null) {\n        if (featureValue <= minDataValue) {\n          size = minSize;\n        } else if (featureValue >= maxDataValue) {\n          size = maxSize;\n        } else {\n          featureRatio = (featureValue - minDataValue) / (maxDataValue - minDataValue);\n          size = minSize + (featureRatio * (maxSize - minSize));\n        }\n      }\n      size = isNaN(size) ? 0 : size;\n    }\n    return size;\n  },\n\n  getColor: function (feature, colorInfo) {\n    // required information to get color\n    if (!(feature.properties && colorInfo && colorInfo.field && colorInfo.stops)) {\n      return null;\n    }\n\n    var attr = feature.properties;\n    var featureValue = attr[colorInfo.field];\n    var lowerBoundColor, upperBoundColor, lowerBound, upperBound;\n    var normField = colorInfo.normalizationField;\n    var normValue = attr ? parseFloat(attr[normField]) : undefined;\n    if (featureValue === null || (normField && ((isNaN(normValue) || normValue === 0)))) {\n      return null;\n    }\n\n    if (!isNaN(normValue)) {\n      featureValue /= normValue;\n    }\n\n    if (featureValue <= colorInfo.stops[0].value) {\n      return colorInfo.stops[0].color;\n    }\n    var lastStop = colorInfo.stops[colorInfo.stops.length - 1];\n    if (featureValue >= lastStop.value) {\n      return lastStop.color;\n    }\n\n    // go through the stops to find min and max\n    for (var i = 0; i < colorInfo.stops.length; i++) {\n      var stopInfo = colorInfo.stops[i];\n\n      if (stopInfo.value <= featureValue) {\n        lowerBoundColor = stopInfo.color;\n        lowerBound = stopInfo.value;\n      } else if (stopInfo.value > featureValue) {\n        upperBoundColor = stopInfo.color;\n        upperBound = stopInfo.value;\n        break;\n      }\n    }\n\n    // feature falls between two stops, interplate the colors\n    if (!isNaN(lowerBound) && !isNaN(upperBound)) {\n      var range = upperBound - lowerBound;\n      if (range > 0) {\n        // more weight the further it is from the lower bound\n        var upperBoundColorWeight = (featureValue - lowerBound) / range;\n        if (upperBoundColorWeight) {\n          // more weight the further it is from the upper bound\n          var lowerBoundColorWeight = (upperBound - featureValue) / range;\n          if (lowerBoundColorWeight) {\n            // interpolate the lower and upper bound color by applying the\n            // weights to each of the rgba colors and adding them together\n            var interpolatedColor = [];\n            for (var j = 0; j < 4; j++) {\n              interpolatedColor[j] = Math.round(lowerBoundColor[j] * lowerBoundColorWeight + upperBoundColor[j] * upperBoundColorWeight);\n            }\n            return interpolatedColor;\n          } else {\n            // no difference between featureValue and upperBound, 100% of upperBoundColor\n            return upperBoundColor;\n          }\n        } else {\n          // no difference between featureValue and lowerBound, 100% of lowerBoundColor\n          return lowerBoundColor;\n        }\n      }\n    }\n    // if we get to here, none of the cases apply so return null\n    return null;\n  }\n});\n\n// export function symbol (symbolJson) {\n//   return new Symbol(symbolJson);\n// }\n\nexport default Symbol;\n","import L from 'leaflet';\n\nexport var ShapeMarker = L.Path.extend({\n\n  initialize: function (latlng, size, options) {\n    L.setOptions(this, options);\n    this._size = size;\n    this._latlng = L.latLng(latlng);\n    this._svgCanvasIncludes();\n  },\n\n  toGeoJSON: function () {\n    return L.GeoJSON.getFeature(this, {\n      type: 'Point',\n      coordinates: L.GeoJSON.latLngToCoords(this.getLatLng())\n    });\n  },\n\n  _svgCanvasIncludes: function () {\n    // implement in sub class\n  },\n\n  _project: function () {\n    this._point = this._map.latLngToLayerPoint(this._latlng);\n  },\n\n  _update: function () {\n    if (this._map) {\n      this._updatePath();\n    }\n  },\n\n  _updatePath: function () {\n    // implement in sub class\n  },\n\n  setLatLng: function (latlng) {\n    this._latlng = L.latLng(latlng);\n    this.redraw();\n    return this.fire('move', {latlng: this._latlng});\n  },\n\n  getLatLng: function () {\n    return this._latlng;\n  },\n\n  setSize: function (size) {\n    this._size = size;\n    return this.redraw();\n  },\n\n  getSize: function () {\n    return this._size;\n  }\n});\n","import L from 'leaflet';\nimport { ShapeMarker } from './ShapeMarker';\n\nexport var CrossMarker = ShapeMarker.extend({\n\n  initialize: function (latlng, size, options) {\n    ShapeMarker.prototype.initialize.call(this, latlng, size, options);\n  },\n\n  _updatePath: function () {\n    this._renderer._updateCrossMarker(this);\n  },\n\n  _svgCanvasIncludes: function () {\n    L.Canvas.include({\n      _updateCrossMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n        var ctx = this._ctx;\n\n        ctx.beginPath();\n        ctx.moveTo(latlng.x, latlng.y + offset);\n        ctx.lineTo(latlng.x, latlng.y - offset);\n        this._fillStroke(ctx, layer);\n\n        ctx.moveTo(latlng.x - offset, latlng.y);\n        ctx.lineTo(latlng.x + offset, latlng.y);\n        this._fillStroke(ctx, layer);\n      }\n    });\n\n    L.SVG.include({\n      _updateCrossMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n\n        if (L.Browser.vml) {\n          latlng._round();\n          offset = Math.round(offset);\n        }\n\n        var str = 'M' + latlng.x + ',' + (latlng.y + offset) +\n          'L' + latlng.x + ',' + (latlng.y - offset) +\n          'M' + (latlng.x - offset) + ',' + latlng.y +\n          'L' + (latlng.x + offset) + ',' + latlng.y;\n\n        this._setPath(layer, str);\n      }\n    });\n  }\n});\n\nexport var crossMarker = function (latlng, size, options) {\n  return new CrossMarker(latlng, size, options);\n};\n\nexport default crossMarker;\n","import L from 'leaflet';\nimport { ShapeMarker } from './ShapeMarker';\n\nexport var XMarker = ShapeMarker.extend({\n\n  initialize: function (latlng, size, options) {\n    ShapeMarker.prototype.initialize.call(this, latlng, size, options);\n  },\n\n  _updatePath: function () {\n    this._renderer._updateXMarker(this);\n  },\n\n  _svgCanvasIncludes: function () {\n    L.Canvas.include({\n      _updateXMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n        var ctx = this._ctx;\n\n        ctx.beginPath();\n\n        ctx.moveTo(latlng.x + offset, latlng.y + offset);\n        ctx.lineTo(latlng.x - offset, latlng.y - offset);\n        this._fillStroke(ctx, layer);\n      }\n    });\n\n    L.SVG.include({\n      _updateXMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n\n        if (L.Browser.vml) {\n          latlng._round();\n          offset = Math.round(offset);\n        }\n\n        var str = 'M' + (latlng.x + offset) + ',' + (latlng.y + offset) +\n          'L' + (latlng.x - offset) + ',' + (latlng.y - offset) +\n          'M' + (latlng.x - offset) + ',' + (latlng.y + offset) +\n          'L' + (latlng.x + offset) + ',' + (latlng.y - offset);\n\n        this._setPath(layer, str);\n      }\n    });\n  }\n});\n\nexport var xMarker = function (latlng, size, options) {\n  return new XMarker(latlng, size, options);\n};\n\nexport default xMarker;\n","import L from 'leaflet';\nimport { ShapeMarker } from './ShapeMarker';\n\nexport var SquareMarker = ShapeMarker.extend({\n  options: {\n    fill: true\n  },\n\n  initialize: function (latlng, size, options) {\n    ShapeMarker.prototype.initialize.call(this, latlng, size, options);\n  },\n\n  _updatePath: function () {\n    this._renderer._updateSquareMarker(this);\n  },\n\n  _svgCanvasIncludes: function () {\n    L.Canvas.include({\n      _updateSquareMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n        var ctx = this._ctx;\n\n        ctx.beginPath();\n\n        ctx.moveTo(latlng.x + offset, latlng.y + offset);\n        ctx.lineTo(latlng.x - offset, latlng.y + offset);\n        ctx.lineTo(latlng.x - offset, latlng.y - offset);\n        ctx.lineTo(latlng.x + offset, latlng.y - offset);\n\n        ctx.closePath();\n\n        this._fillStroke(ctx, layer);\n      }\n    });\n\n    L.SVG.include({\n      _updateSquareMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n\n        if (L.Browser.vml) {\n          latlng._round();\n          offset = Math.round(offset);\n        }\n\n        var str = 'M' + (latlng.x + offset) + ',' + (latlng.y + offset) +\n          'L' + (latlng.x - offset) + ',' + (latlng.y + offset) +\n          'L' + (latlng.x - offset) + ',' + (latlng.y - offset) +\n          'L' + (latlng.x + offset) + ',' + (latlng.y - offset);\n\n        str = str + (L.Browser.svg ? 'z' : 'x');\n\n        this._setPath(layer, str);\n      }\n    });\n  }\n});\n\nexport var squareMarker = function (latlng, size, options) {\n  return new SquareMarker(latlng, size, options);\n};\n\nexport default squareMarker;\n","import L from 'leaflet';\nimport { ShapeMarker } from './ShapeMarker';\n\nexport var DiamondMarker = ShapeMarker.extend({\n  options: {\n    fill: true\n  },\n\n  initialize: function (latlng, size, options) {\n    ShapeMarker.prototype.initialize.call(this, latlng, size, options);\n  },\n\n  _updatePath: function () {\n    this._renderer._updateDiamondMarker(this);\n  },\n\n  _svgCanvasIncludes: function () {\n    L.Canvas.include({\n      _updateDiamondMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n        var ctx = this._ctx;\n\n        ctx.beginPath();\n\n        ctx.moveTo(latlng.x, latlng.y + offset);\n        ctx.lineTo(latlng.x - offset, latlng.y);\n        ctx.lineTo(latlng.x, latlng.y - offset);\n        ctx.lineTo(latlng.x + offset, latlng.y);\n\n        ctx.closePath();\n\n        this._fillStroke(ctx, layer);\n      }\n    });\n\n    L.SVG.include({\n      _updateDiamondMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n\n        if (L.Browser.vml) {\n          latlng._round();\n          offset = Math.round(offset);\n        }\n\n        var str = 'M' + latlng.x + ',' + (latlng.y + offset) +\n          'L' + (latlng.x - offset) + ',' + latlng.y +\n          'L' + latlng.x + ',' + (latlng.y - offset) +\n          'L' + (latlng.x + offset) + ',' + latlng.y;\n\n        str = str + (L.Browser.svg ? 'z' : 'x');\n\n        this._setPath(layer, str);\n      }\n    });\n  }\n});\n\nexport var diamondMarker = function (latlng, size, options) {\n  return new DiamondMarker(latlng, size, options);\n};\n\nexport default diamondMarker;\n","import L from 'leaflet';\nimport Symbol from './Symbol';\nimport {squareMarker, xMarker, crossMarker, diamondMarker} from 'leaflet-shape-markers';\n\nexport var PointSymbol = Symbol.extend({\n\n  statics: {\n    MARKERTYPES: ['esriSMSCircle', 'esriSMSCross', 'esriSMSDiamond', 'esriSMSSquare', 'esriSMSX', 'esriPMS']\n  },\n\n  initialize: function (symbolJson, options) {\n    Symbol.prototype.initialize.call(this, symbolJson, options);\n    if (options) {\n      this.serviceUrl = options.url;\n    }\n    if (symbolJson) {\n      if (symbolJson.type === 'esriPMS') {\n        var url = this.serviceUrl + 'images/' + this._symbolJson.url;\n        this._iconUrl = options && options.token ? url + '?token=' + options.token : url;\n        if (symbolJson.imageData) {\n          this._iconUrl = 'data:' + symbolJson.contentType + ';base64,' + symbolJson.imageData;\n        }\n        // leaflet does not allow resizing icons so keep a hash of different\n        // icon sizes to try and keep down on the number of icons created\n        this._icons = {};\n        // create base icon\n        this.icon = this._createIcon(this._symbolJson);\n      } else {\n        this._fillStyles();\n      }\n    }\n  },\n\n  _fillStyles: function () {\n    if (this._symbolJson.outline && this._symbolJson.size > 0) {\n      this._styles.stroke = true;\n      this._styles.weight = this.pixelValue(this._symbolJson.outline.width);\n      this._styles.color = this.colorValue(this._symbolJson.outline.color);\n      this._styles.opacity = this.alphaValue(this._symbolJson.outline.color);\n    } else {\n      this._styles.stroke = false;\n    }\n    if (this._symbolJson.color) {\n      this._styles.fillColor = this.colorValue(this._symbolJson.color);\n      this._styles.fillOpacity = this.alphaValue(this._symbolJson.color);\n    } else {\n      this._styles.fillOpacity = 0;\n    }\n\n    if (this._symbolJson.style === 'esriSMSCircle') {\n      this._styles.radius = this.pixelValue(this._symbolJson.size) / 2.0;\n    }\n  },\n\n  _createIcon: function (options) {\n    var width = this.pixelValue(options.width);\n    var height = width;\n    if (options.height) {\n      height = this.pixelValue(options.height);\n    }\n    var xOffset = width / 2.0;\n    var yOffset = height / 2.0;\n\n    if (options.xoffset) {\n      xOffset += this.pixelValue(options.xoffset);\n    }\n    if (options.yoffset) {\n      yOffset += this.pixelValue(options.yoffset);\n    }\n\n    var icon = L.icon({\n      iconUrl: this._iconUrl,\n      iconSize: [width, height],\n      iconAnchor: [xOffset, yOffset]\n    });\n    this._icons[options.width.toString()] = icon;\n    return icon;\n  },\n\n  _getIcon: function (size) {\n    // check to see if it is already created by size\n    var icon = this._icons[size.toString()];\n    if (!icon) {\n      icon = this._createIcon({width: size});\n    }\n    return icon;\n  },\n\n  pointToLayer: function (geojson, latlng, visualVariables, options) {\n    var size = this._symbolJson.size || this._symbolJson.width;\n    if (!this._isDefault) {\n      if (visualVariables.sizeInfo) {\n        var calculatedSize = this.getSize(geojson, visualVariables.sizeInfo);\n        if (calculatedSize) {\n          size = calculatedSize;\n        }\n      }\n      if (visualVariables.colorInfo) {\n        var color = this.getColor(geojson, visualVariables.colorInfo);\n        if (color) {\n          this._styles.fillColor = this.colorValue(color);\n          this._styles.fillOpacity = this.alphaValue(color);\n        }\n      }\n    }\n\n    if (this._symbolJson.type === 'esriPMS') {\n      var layerOptions = L.extend({}, {icon: this._getIcon(size)}, options);\n      return L.marker(latlng, layerOptions);\n    }\n    size = this.pixelValue(size);\n\n    switch (this._symbolJson.style) {\n      case 'esriSMSSquare':\n        return squareMarker(latlng, size, L.extend({}, this._styles, options));\n      case 'esriSMSDiamond':\n        return diamondMarker(latlng, size, L.extend({}, this._styles, options));\n      case 'esriSMSCross':\n        return crossMarker(latlng, size, L.extend({}, this._styles, options));\n      case 'esriSMSX':\n        return xMarker(latlng, size, L.extend({}, this._styles, options));\n    }\n    this._styles.radius = size / 2.0;\n    return L.circleMarker(latlng, L.extend({}, this._styles, options));\n  }\n});\n\nexport function pointSymbol (symbolJson, options) {\n  return new PointSymbol(symbolJson, options);\n}\n\nexport default pointSymbol;\n","import Symbol from './Symbol';\n\nexport var LineSymbol = Symbol.extend({\n  statics: {\n    // Not implemented 'esriSLSNull'\n    LINETYPES: ['esriSLSDash', 'esriSLSDot', 'esriSLSDashDotDot', 'esriSLSDashDot', 'esriSLSSolid']\n  },\n  initialize: function (symbolJson, options) {\n    Symbol.prototype.initialize.call(this, symbolJson, options);\n    this._fillStyles();\n  },\n\n  _fillStyles: function () {\n    // set the defaults that show up on arcgis online\n    this._styles.lineCap = 'butt';\n    this._styles.lineJoin = 'miter';\n    this._styles.fill = false;\n    this._styles.weight = 0;\n\n    if (!this._symbolJson) {\n      return this._styles;\n    }\n\n    if (this._symbolJson.color) {\n      this._styles.color = this.colorValue(this._symbolJson.color);\n      this._styles.opacity = this.alphaValue(this._symbolJson.color);\n    }\n\n    if (!isNaN(this._symbolJson.width)) {\n      this._styles.weight = this.pixelValue(this._symbolJson.width);\n\n      var dashValues = [];\n\n      switch (this._symbolJson.style) {\n        case 'esriSLSDash':\n          dashValues = [4, 3];\n          break;\n        case 'esriSLSDot':\n          dashValues = [1, 3];\n          break;\n        case 'esriSLSDashDot':\n          dashValues = [8, 3, 1, 3];\n          break;\n        case 'esriSLSDashDotDot':\n          dashValues = [8, 3, 1, 3, 1, 3];\n          break;\n      }\n\n      // use the dash values and the line weight to set dash array\n      if (dashValues.length > 0) {\n        for (var i = 0; i < dashValues.length; i++) {\n          dashValues[i] *= this._styles.weight;\n        }\n\n        this._styles.dashArray = dashValues.join(',');\n      }\n    }\n  },\n\n  style: function (feature, visualVariables) {\n    if (!this._isDefault && visualVariables) {\n      if (visualVariables.sizeInfo) {\n        var calculatedSize = this.pixelValue(this.getSize(feature, visualVariables.sizeInfo));\n        if (calculatedSize) {\n          this._styles.weight = calculatedSize;\n        }\n      }\n      if (visualVariables.colorInfo) {\n        var color = this.getColor(feature, visualVariables.colorInfo);\n        if (color) {\n          this._styles.color = this.colorValue(color);\n          this._styles.opacity = this.alphaValue(color);\n        }\n      }\n    }\n    return this._styles;\n  }\n});\n\nexport function lineSymbol (symbolJson, options) {\n  return new LineSymbol(symbolJson, options);\n}\n\nexport default lineSymbol;\n","import Symbol from './Symbol';\nimport lineSymbol from './LineSymbol';\n\nexport var PolygonSymbol = Symbol.extend({\n  statics: {\n    // not implemented: 'esriSFSBackwardDiagonal','esriSFSCross','esriSFSDiagonalCross','esriSFSForwardDiagonal','esriSFSHorizontal','esriSFSNull','esriSFSVertical'\n    POLYGONTYPES: ['esriSFSSolid']\n  },\n  initialize: function (symbolJson, options) {\n    Symbol.prototype.initialize.call(this, symbolJson, options);\n    if (symbolJson) {\n      this._lineStyles = lineSymbol(symbolJson.outline, options).style();\n      this._fillStyles();\n    }\n  },\n\n  _fillStyles: function () {\n    if (this._lineStyles) {\n      if (this._lineStyles.weight === 0) {\n        // when weight is 0, setting the stroke to false can still look bad\n        // (gaps between the polygons)\n        this._styles.stroke = false;\n      } else {\n        // copy the line symbol styles into this symbol's styles\n        for (var styleAttr in this._lineStyles) {\n          this._styles[styleAttr] = this._lineStyles[styleAttr];\n        }\n      }\n    }\n\n    // set the fill for the polygon\n    if (this._symbolJson) {\n      if (this._symbolJson.color &&\n          // don't fill polygon if type is not supported\n          PolygonSymbol.POLYGONTYPES.indexOf(this._symbolJson.style >= 0)) {\n        this._styles.fill = true;\n        this._styles.fillColor = this.colorValue(this._symbolJson.color);\n        this._styles.fillOpacity = this.alphaValue(this._symbolJson.color);\n      } else {\n        this._styles.fill = false;\n        this._styles.fillOpacity = 0;\n      }\n    }\n  },\n\n  style: function (feature, visualVariables) {\n    if (!this._isDefault && visualVariables && visualVariables.colorInfo) {\n      var color = this.getColor(feature, visualVariables.colorInfo);\n      if (color) {\n        this._styles.fillColor = this.colorValue(color);\n        this._styles.fillOpacity = this.alphaValue(color);\n      }\n    }\n    return this._styles;\n  }\n});\n\nexport function polygonSymbol (symbolJson, options) {\n  return new PolygonSymbol(symbolJson, options);\n}\n\nexport default polygonSymbol;\n","import L from 'leaflet';\n\nimport pointSymbol from '../Symbols/PointSymbol';\nimport lineSymbol from '../Symbols/LineSymbol';\nimport polygonSymbol from '../Symbols/PolygonSymbol';\n\nexport var Renderer = L.Class.extend({\n  options: {\n    proportionalPolygon: false,\n    clickable: true\n  },\n\n  initialize: function (rendererJson, options) {\n    this._rendererJson = rendererJson;\n    this._pointSymbols = false;\n    this._symbols = [];\n    this._visualVariables = this._parseVisualVariables(rendererJson.visualVariables);\n    L.Util.setOptions(this, options);\n  },\n\n  _parseVisualVariables: function (visualVariables) {\n    var visVars = {};\n    if (visualVariables) {\n      for (var i = 0; i < visualVariables.length; i++) {\n        visVars[visualVariables[i].type] = visualVariables[i];\n      }\n    }\n    return visVars;\n  },\n\n  _createDefaultSymbol: function () {\n    if (this._rendererJson.defaultSymbol) {\n      this._defaultSymbol = this._newSymbol(this._rendererJson.defaultSymbol);\n      this._defaultSymbol._isDefault = true;\n    }\n  },\n\n  _newSymbol: function (symbolJson) {\n    if (symbolJson.type === 'esriSMS' || symbolJson.type === 'esriPMS') {\n      this._pointSymbols = true;\n      return pointSymbol(symbolJson, this.options);\n    }\n    if (symbolJson.type === 'esriSLS') {\n      return lineSymbol(symbolJson, this.options);\n    }\n    if (symbolJson.type === 'esriSFS') {\n      return polygonSymbol(symbolJson, this.options);\n    }\n  },\n\n  _getSymbol: function () {\n    // override\n  },\n\n  attachStylesToLayer: function (layer) {\n    if (this._pointSymbols) {\n      layer.options.pointToLayer = L.Util.bind(this.pointToLayer, this);\n    } else {\n      layer.options.style = L.Util.bind(this.style, this);\n      layer._originalStyle = layer.options.style;\n    }\n  },\n\n  pointToLayer: function (geojson, latlng) {\n    var sym = this._getSymbol(geojson);\n    if (sym && sym.pointToLayer) {\n      // right now custom panes are the only option pushed through\n      return sym.pointToLayer(geojson, latlng, this._visualVariables, this.options);\n    }\n    // invisible symbology\n    return L.circleMarker(latlng, {radius: 0, opacity: 0});\n  },\n\n  style: function (feature) {\n    var userStyles;\n    if (this.options.userDefinedStyle) {\n      userStyles = this.options.userDefinedStyle(feature);\n    }\n    // find the symbol to represent this feature\n    var sym = this._getSymbol(feature);\n    if (sym) {\n      return this.mergeStyles(sym.style(feature, this._visualVariables), userStyles);\n    } else {\n      // invisible symbology\n      return this.mergeStyles({opacity: 0, fillOpacity: 0}, userStyles);\n    }\n  },\n\n  mergeStyles: function (styles, userStyles) {\n    var mergedStyles = {};\n    var attr;\n    // copy renderer style attributes\n    for (attr in styles) {\n      if (styles.hasOwnProperty(attr)) {\n        mergedStyles[attr] = styles[attr];\n      }\n    }\n    // override with user defined style attributes\n    if (userStyles) {\n      for (attr in userStyles) {\n        if (userStyles.hasOwnProperty(attr)) {\n          mergedStyles[attr] = userStyles[attr];\n        }\n      }\n    }\n    return mergedStyles;\n  }\n});\n\nexport default Renderer;\n","import Renderer from './Renderer';\n\nexport var SimpleRenderer = Renderer.extend({\n  initialize: function (rendererJson, options) {\n    Renderer.prototype.initialize.call(this, rendererJson, options);\n    this._createSymbol();\n  },\n\n  _createSymbol: function () {\n    if (this._rendererJson.symbol) {\n      this._symbols.push(this._newSymbol(this._rendererJson.symbol));\n    }\n  },\n\n  _getSymbol: function () {\n    return this._symbols[0];\n  }\n});\n\nexport function simpleRenderer (rendererJson, options) {\n  return new SimpleRenderer(rendererJson, options);\n}\n\nexport default simpleRenderer;\n","import Renderer from './Renderer';\n\nexport var ClassBreaksRenderer = Renderer.extend({\n  initialize: function (rendererJson, options) {\n    Renderer.prototype.initialize.call(this, rendererJson, options);\n    this._field = this._rendererJson.field;\n    if (this._rendererJson.normalizationType && this._rendererJson.normalizationType === 'esriNormalizeByField') {\n      this._normalizationField = this._rendererJson.normalizationField;\n    }\n    this._createSymbols();\n  },\n\n  _createSymbols: function () {\n    var symbol;\n    var classbreaks = this._rendererJson.classBreakInfos;\n\n    this._symbols = [];\n\n    // create a symbol for each class break\n    for (var i = classbreaks.length - 1; i >= 0; i--) {\n      if (this.options.proportionalPolygon && this._rendererJson.backgroundFillSymbol) {\n        symbol = this._newSymbol(this._rendererJson.backgroundFillSymbol);\n      } else {\n        symbol = this._newSymbol(classbreaks[i].symbol);\n      }\n      symbol.val = classbreaks[i].classMaxValue;\n      this._symbols.push(symbol);\n    }\n    // sort the symbols in ascending value\n    this._symbols.sort(function (a, b) {\n      return a.val > b.val ? 1 : -1;\n    });\n    this._createDefaultSymbol();\n    this._maxValue = this._symbols[this._symbols.length - 1].val;\n  },\n\n  _getSymbol: function (feature) {\n    var val = feature.properties[this._field];\n    if (this._normalizationField) {\n      var normValue = feature.properties[this._normalizationField];\n      if (!isNaN(normValue) && normValue !== 0) {\n        val = val / normValue;\n      } else {\n        return this._defaultSymbol;\n      }\n    }\n\n    if (val > this._maxValue) {\n      return this._defaultSymbol;\n    }\n    var symbol = this._symbols[0];\n    for (var i = this._symbols.length - 1; i >= 0; i--) {\n      if (val > this._symbols[i].val) {\n        break;\n      }\n      symbol = this._symbols[i];\n    }\n    return symbol;\n  }\n});\n\nexport function classBreaksRenderer (rendererJson, options) {\n  return new ClassBreaksRenderer(rendererJson, options);\n}\n\nexport default classBreaksRenderer;\n","import Renderer from './Renderer';\n\nexport var UniqueValueRenderer = Renderer.extend({\n  initialize: function (rendererJson, options) {\n    Renderer.prototype.initialize.call(this, rendererJson, options);\n    this._field = this._rendererJson.field1;\n    this._createSymbols();\n  },\n\n  _createSymbols: function () {\n    var symbol;\n    var uniques = this._rendererJson.uniqueValueInfos;\n\n    // create a symbol for each unique value\n    for (var i = uniques.length - 1; i >= 0; i--) {\n      symbol = this._newSymbol(uniques[i].symbol);\n      symbol.val = uniques[i].value;\n      this._symbols.push(symbol);\n    }\n    this._createDefaultSymbol();\n  },\n\n  _getSymbol: function (feature) {\n    var val = feature.properties[this._field];\n    // accumulate values if there is more than one field defined\n    if (this._rendererJson.fieldDelimiter && this._rendererJson.field2) {\n      var val2 = feature.properties[this._rendererJson.field2];\n      if (val2) {\n        val += this._rendererJson.fieldDelimiter + val2;\n        var val3 = feature.properties[this._rendererJson.field3];\n        if (val3) {\n          val += this._rendererJson.fieldDelimiter + val3;\n        }\n      }\n    }\n\n    var symbol = this._defaultSymbol;\n    for (var i = this._symbols.length - 1; i >= 0; i--) {\n      // using the === operator does not work if the field\n      // of the unique renderer is not a string\n      /*eslint-disable */\n      if (this._symbols[i].val == val) {\n        symbol = this._symbols[i];\n      }\n      /*eslint-enable */\n    }\n    return symbol;\n  }\n});\n\nexport function uniqueValueRenderer (rendererJson, options) {\n  return new UniqueValueRenderer(rendererJson, options);\n}\n\nexport default uniqueValueRenderer;\n","import L from 'leaflet';\n\nimport classBreaksRenderer from './Renderers/ClassBreaksRenderer';\nimport uniqueValueRenderer from './Renderers/UniqueValueRenderer';\nimport simpleRenderer from './Renderers/SimpleRenderer';\n\nL.esri.FeatureLayer.addInitHook(function () {\n  if (this.options.ignoreRenderer) {\n    return;\n  }\n  var oldOnAdd = L.Util.bind(this.onAdd, this);\n  var oldUnbindPopup = L.Util.bind(this.unbindPopup, this);\n  var oldOnRemove = L.Util.bind(this.onRemove, this);\n  L.Util.bind(this.createNewLayer, this);\n\n  this.onAdd = function (map) {\n    this.metadata(function (error, response) {\n      if (error) {\n        console.warn('failed to load metadata from the service.');\n        return\n      } if (response && response.drawingInfo) {\n        if(this.options.drawingInfo) {\n          // allow L.esri.webmap (and others) to override service symbology with info provided in layer constructor\n          var serviceMetadata = response;\n          serviceMetadata.drawingInfo = this.options.drawingInfo;\n          this._setRenderers(serviceMetadata);\n        } else {\n          this._setRenderers(response);\n        }\n        this._setRenderers(response);\n        oldOnAdd(map);\n        this._addPointLayer(map);\n      }\n    }, this);\n  };\n\n  this.onRemove = function (map) {\n    oldOnRemove(map);\n    if (this._pointLayer) {\n      var pointLayers = this._pointLayer.getLayers();\n      for (var i in pointLayers) {\n        map.removeLayer(pointLayers[i]);\n      }\n    }\n  };\n\n  this.unbindPopup = function () {\n    oldUnbindPopup();\n    if (this._pointLayer) {\n      var pointLayers = this._pointLayer.getLayers();\n      for (var i in pointLayers) {\n        pointLayers[i].unbindPopup();\n      }\n    }\n  };\n\n  this._addPointLayer = function (map) {\n    if (this._pointLayer) {\n      this._pointLayer.addTo(map);\n      this._pointLayer.bringToFront();\n    }\n  };\n\n  this._createPointLayer = function () {\n    if (!this._pointLayer) {\n      this._pointLayer = L.geoJson();\n      // store the feature ids that have already been added to the map\n      this._pointLayerIds = {};\n\n      if (this._popup) {\n        var popupFunction = function (feature, layer) {\n          layer.bindPopup(this._popup(feature, layer), this._popupOptions);\n        };\n        this._pointLayer.options.onEachFeature = L.Util.bind(popupFunction, this);\n      }\n    }\n  };\n\n  this.createNewLayer = function (geojson) {\n    var fLayer = L.GeoJSON.geometryToLayer(geojson, this.options);\n\n    // add a point layer when the polygon is represented as proportional marker symbols\n    if (this._hasProportionalSymbols) {\n      var centroid = this.getPolygonCentroid(geojson.geometry.coordinates);\n      if (!(isNaN(centroid[0]) || isNaN(centroid[0]))) {\n        this._createPointLayer();\n\n        var featureId = geojson.id.toString();\n        // only add the feature if it does not already exist on the map\n        if (!this._pointLayerIds[featureId]) {\n          var pointjson = this.getPointJson(geojson, centroid);\n\n          this._pointLayer.addData(pointjson);\n          this._pointLayerIds[featureId] = true;\n        }\n\n        this._pointLayer.bringToFront();\n      }\n    }\n    return fLayer;\n  };\n\n  this.getPolygonCentroid = function (coordinates) {\n    var pts = coordinates[0][0];\n    if (pts.length === 2) {\n      pts = coordinates[0];\n    }\n\n    var twicearea = 0;\n    var x = 0;\n    var y = 0;\n    var nPts = pts.length;\n    var p1;\n    var p2;\n    var f;\n\n    for (var i = 0, j = nPts - 1; i < nPts; j = i++) {\n      p1 = pts[i]; p2 = pts[j];\n      twicearea += p1[0] * p2[1];\n      twicearea -= p1[1] * p2[0];\n      f = p1[0] * p2[1] - p2[0] * p1[1];\n      x += (p1[0] + p2[0]) * f;\n      y += (p1[1] + p2[1]) * f;\n    }\n    f = twicearea * 3;\n    return [x / f, y / f];\n  };\n\n  this.getPointJson = function (geojson, centroid) {\n    return {\n      type: 'Feature',\n      properties: geojson.properties,\n      id: geojson.id,\n      geometry: {\n        type: 'Point',\n        coordinates: [centroid[0], centroid[1]]\n      }\n    };\n  };\n\n  this._checkForProportionalSymbols = function (geometryType, renderer) {\n    this._hasProportionalSymbols = false;\n    if (geometryType === 'esriGeometryPolygon') {\n      if (renderer.backgroundFillSymbol) {\n        this._hasProportionalSymbols = true;\n      }\n      // check to see if the first symbol in the classbreaks is a marker symbol\n      if (renderer.classBreakInfos && renderer.classBreakInfos.length) {\n        var sym = renderer.classBreakInfos[0].symbol;\n        if (sym && (sym.type === 'esriSMS' || sym.type === 'esriPMS')) {\n          this._hasProportionalSymbols = true;\n        }\n      }\n    }\n  };\n\n  this._setRenderers = function (geojson) {\n    var rend;\n    var rendererInfo = geojson.drawingInfo.renderer;\n\n    var options = {\n      url: this.options.url\n    };\n\n    if (this.options.token) {\n      options.token = this.options.token;\n    }\n    if (this.options.pane) {\n      options.pane = this.options.pane;\n    }\n    if (geojson.drawingInfo.transparency) {\n      options.layerTransparency = geojson.drawingInfo.transparency;\n    }\n    if (this.options.style) {\n      options.userDefinedStyle = this.options.style;\n    }\n\n    switch (rendererInfo.type) {\n      case 'classBreaks':\n        this._checkForProportionalSymbols(geojson.geometryType, rendererInfo);\n        if (this._hasProportionalSymbols) {\n          this._createPointLayer();\n          var pRend = classBreaksRenderer(rendererInfo, options);\n          pRend.attachStylesToLayer(this._pointLayer);\n          options.proportionalPolygon = true;\n        }\n        rend = classBreaksRenderer(rendererInfo, options);\n        break;\n      case 'uniqueValue':\n        rend = uniqueValueRenderer(rendererInfo, options);\n        break;\n      default:\n        rend = simpleRenderer(rendererInfo, options);\n    }\n    rend.attachStylesToLayer(this);\n  };\n\n  this.metadata(function (error, response) {\n    if (error) {\n      return;\n    } if (response && response.drawingInfo) {\n      // if drawingInfo from a webmap is supplied in the layer constructor, use that instead\n      if (this.options.drawingInfo) {\n        response.drawingInfo = this.options.drawingInfo;\n      }\n      this._setRenderers(response);\n    } if (this._alreadyAdded) {\n      this.setStyle(this._originalStyle);\n    }\n  }, this);\n});\n"],"names":["pointSymbol","symbolJson","options","PointSymbol","lineSymbol","LineSymbol","polygonSymbol","PolygonSymbol","simpleRenderer","rendererJson","SimpleRenderer","classBreaksRenderer","ClassBreaksRenderer","uniqueValueRenderer","UniqueValueRenderer","Symbol","L","Class","extend","initialize","this","_symbolJson","val","_styles","_isDefault","_layerTransparency","layerTransparency","pixelValue","pointValue","colorValue","color","alphaValue","alpha","getSize","feature","sizeInfo","attr","properties","field","size","featureValue","featureRatio","minSize","maxSize","minDataValue","maxDataValue","normField","normalizationField","normValue","parseFloat","undefined","isNaN","getColor","colorInfo","stops","lowerBoundColor","upperBoundColor","lowerBound","upperBound","value","lastStop","length","i","stopInfo","range","upperBoundColorWeight","lowerBoundColorWeight","interpolatedColor","j","Math","round","ShapeMarker","Path","latlng","setOptions","_size","_latlng","latLng","_svgCanvasIncludes","toGeoJSON","GeoJSON","getFeature","type","coordinates","latLngToCoords","getLatLng","_project","_point","_map","latLngToLayerPoint","_update","_updatePath","setLatLng","redraw","fire","setSize","CrossMarker","prototype","call","_renderer","_updateCrossMarker","Canvas","include","layer","offset","ctx","_ctx","beginPath","moveTo","x","y","lineTo","_fillStroke","SVG","Browser","vml","_round","str","_setPath","crossMarker","XMarker","_updateXMarker","xMarker","SquareMarker","fill","_updateSquareMarker","closePath","svg","squareMarker","DiamondMarker","_updateDiamondMarker","diamondMarker","statics","MARKERTYPES","serviceUrl","url","_iconUrl","token","imageData","contentType","_icons","icon","_createIcon","_fillStyles","outline","stroke","weight","width","opacity","fillColor","fillOpacity","style","radius","height","xOffset","yOffset","xoffset","yoffset","iconUrl","iconSize","iconAnchor","toString","_getIcon","pointToLayer","geojson","visualVariables","calculatedSize","layerOptions","marker","circleMarker","LINETYPES","lineCap","lineJoin","dashValues","dashArray","join","POLYGONTYPES","_lineStyles","styleAttr","indexOf","Renderer","proportionalPolygon","clickable","_rendererJson","_pointSymbols","_symbols","_visualVariables","_parseVisualVariables","Util","visVars","_createDefaultSymbol","defaultSymbol","_defaultSymbol","_newSymbol","_getSymbol","attachStylesToLayer","bind","_originalStyle","sym","userStyles","userDefinedStyle","mergeStyles","styles","mergedStyles","hasOwnProperty","_createSymbol","symbol","push","_field","normalizationType","_normalizationField","_createSymbols","classbreaks","classBreakInfos","backgroundFillSymbol","classMaxValue","sort","a","b","_maxValue","field1","uniques","uniqueValueInfos","fieldDelimiter","field2","val2","val3","field3","esri","FeatureLayer","addInitHook","ignoreRenderer","oldOnAdd","onAdd","oldUnbindPopup","unbindPopup","oldOnRemove","onRemove","createNewLayer","map","metadata","error","response","console","warn","drawingInfo","serviceMetadata","_setRenderers","_addPointLayer","_pointLayer","pointLayers","getLayers","removeLayer","addTo","bringToFront","_createPointLayer","geoJson","_pointLayerIds","_popup","popupFunction","bindPopup","_popupOptions","onEachFeature","fLayer","geometryToLayer","_hasProportionalSymbols","centroid","getPolygonCentroid","geometry","featureId","id","pointjson","getPointJson","addData","pts","p1","p2","f","twicearea","nPts","_checkForProportionalSymbols","geometryType","renderer","rend","rendererInfo","pane","transparency","pRend","_alreadyAdded","setStyle"],"mappings":"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"}