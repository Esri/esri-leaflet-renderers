{"version":3,"sources":["../src/EsriLeafletRenderers.js","../src/Symbols/Symbol.js","../src/Symbols/PointSymbol.js","../src/Symbols/LineSymbol.js","../src/Symbols/PolygonSymbol.js","../src/Renderers/Renderer.js","../src/Renderers/SimpleRenderer.js","../src/Renderers/ClassBreaksRenderer.js","../src/Renderers/UniqueValueRenderer.js","../src/Markers/SquareMarker.js","../src/Markers/DiamondMarker.js","../src/Markers/CrossMarker.js","../src/Markers/XMarker.js","../src/FeatureLayerHook.js"],"names":["EsriLeafletRenderers","VERSION","window","L","esri","Renderers","Esri","Symbol","Class","extend","initialize","symbolJson","options","this","_symbolJson","val","_styles","_isDefault","_layerTransparency","layerTransparency","pixelValue","pointValue","colorValue","color","alphaValue","alpha","getSize","feature","sizeInfo","attr","properties","field","size","featureValue","featureRatio","minSize","maxSize","minDataValue","maxDataValue","normField","normalizationField","normValue","parseFloat","undefined","isNaN","getColor","colorInfo","stops","lowerBoundColor","upperBoundColor","lowerBound","upperBound","value","lastStop","length","i","stopInfo","range","upperBoundColorWeight","lowerBoundColorWeight","interpolatedColor","j","Math","round","PointSymbol","statics","MARKERTYPES","prototype","call","serviceUrl","url","type","_iconUrl","token","_icons","icon","_createIcon","_fillStyles","outline","stroke","weight","width","opacity","fillColor","fillOpacity","style","radius","height","xOffset","yOffset","xoffset","yoffset","iconUrl","iconSize","iconAnchor","toString","_getIcon","pointToLayer","geojson","latlng","visualVariables","calculatedSize","marker","squareMarker","diamondMarker","crossMarker","xMarker","circleMarker","pointSymbol","LineSymbol","LINETYPES","lineCap","lineJoin","fill","dashValues","dashArray","join","lineSymbol","PolygonSymbol","POLYGONTYPES","_lineStyles","styleAttr","indexOf","polygonSymbol","Renderer","proportionalPolygon","clickable","rendererJson","_rendererJson","_pointSymbols","_symbols","_visualVariables","_parseVisualVariables","Util","setOptions","visVars","_createDefaultSymbol","defaultSymbol","_defaultSymbol","_newSymbol","_getSymbol","attachStylesToLayer","layer","bind","sym","SimpleRenderer","_createSymbol","symbol","push","simpleRenderer","ClassBreaksRenderer","_field","normalizationType","_normalizationField","_createSymbols","classbreaks","classBreakInfos","backgroundFillSymbol","classMaxValue","sort","a","b","_maxValue","classBreaksRenderer","UniqueValueRenderer","field1","uniques","uniqueValueInfos","fieldDelimiter","field2","val2","val3","field3","uniqueValueRenderer","SquareMarker","Path","center","_size","_center","projectLatlngs","_point","_map","latLngToLayerPoint","getPathString","offset","VML","_round","str","x","y","Browser","svg","setLatLng","redraw","getLatLng","latLng","setSize","DiamondMarker","CrossMarker","XMarker","initializeRenderers","oldOnAdd","onAdd","oldUnbindPopup","unbindPopup","oldOnRemove","onRemove","createNewLayer","metadata","error","response","drawingInfo","_setRenderers","_metadataLoaded","_loadedMap","_addPointLayer","map","_pointLayer","pointLayers","getLayers","removeLayer","addTo","bringToFront","_createPointLayer","geoJson","_pointLayerIds","_popup","popupFunction","bindPopup","_popupOptions","onEachFeature","fLayer","GeoJSON","geometryToLayer","coordsToLatLng","_hasProportionalSymbols","centroid","getPolygonCentroid","geometry","coordinates","featureId","id","pointjson","getPointJson","addData","pts","p1","p2","f","twicearea","nPts","_checkForProportionalSymbols","geometryType","renderer","rend","rendererInfo","_service","transparency","pRend","FeatureLayer","addInitHook","ClusteredFeatureLayer"],"mappings":"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","file":"esri-leaflet-renderers.js","sourcesContent":["var EsriLeafletRenderers = {\n  VERSION: '1.0.1'\n};\n\n// attach to the L.esri global if we can\nif(typeof window !== 'undefined' && window.L && window.L.esri) {\n  window.L.esri.Renderers = EsriLeafletRenderers;\n}\n\n// We do not have an 'Esri' variable e.g loading this file directly from source define 'Esri'\nif(!Esri){\n  var Esri = window.L.esri;\n}\n","EsriLeafletRenderers.Symbol = L.Class.extend({\n\n  initialize: function(symbolJson, options){\n    this._symbolJson = symbolJson;\n    this.val = null;\n    this._styles = {};\n    this._isDefault = false;\n    this._layerTransparency = 1;\n    if (options && options.layerTransparency) {\n      this._layerTransparency = 1 - (options.layerTransparency / 100.0);\n    }\n  },\n\n  //the geojson values returned are in points\n  pixelValue: function(pointValue){\n    return pointValue * 1.333;\n  },\n\n  //color is an array [r,g,b,a]\n  colorValue: function(color){\n    return 'rgb(' + color[0] + ',' + color[1] + ',' + color[2] + ')';\n  },\n\n  alphaValue: function(color){\n    var alpha = color[3] / 255.0;\n    return alpha * this._layerTransparency;\n  },\n\n  getSize: function(feature, sizeInfo) {\n\n    var attr = feature.properties,\n    field = sizeInfo.field,\n    size = 0,\n    featureValue = null;\n\n    if(field){\n      featureValue = attr[field];\n      var minSize = sizeInfo.minSize,\n      maxSize = sizeInfo.maxSize,\n      minDataValue = sizeInfo.minDataValue,\n      maxDataValue = sizeInfo.maxDataValue,\n      featureRatio,\n      normField = sizeInfo.normalizationField,\n      normValue = attr ? parseFloat(attr[normField]) : undefined;\n\n      if(featureValue === null || (normField && ((isNaN(normValue) || normValue === 0)))){\n       return null;\n      }\n\n      if(!isNaN(normValue)){\n        featureValue /= normValue;\n      }\n\n      if(minSize !== null && maxSize !== null && minDataValue !== null && maxDataValue !== null){\n        if(featureValue <= minDataValue){\n          size = minSize;\n        }\n        else if(featureValue >= maxDataValue){\n          size = maxSize;\n        }\n        else{\n          featureRatio = (featureValue - minDataValue) / (maxDataValue - minDataValue);\n          size = minSize + (featureRatio * (maxSize - minSize));\n        }\n      }\n      size = isNaN(size) ? 0 : size;\n    }\n    return size;\n  },\n\n  getColor: function(feature, colorInfo) {\n    //required information to get color\n    if(!(feature.properties && colorInfo && colorInfo.field && colorInfo.stops)){\n      return null;\n    }\n\n    var attr = feature.properties;\n    var featureValue = attr[colorInfo.field];\n    var lowerBoundColor, upperBoundColor, lowerBound, upperBound;\n    var normField = colorInfo.normalizationField;\n    var normValue = attr ? parseFloat(attr[normField]) : undefined;\n    if(featureValue === null || (normField && ((isNaN(normValue) || normValue === 0)))){\n      return null;\n    }\n\n    if(!isNaN(normValue)){\n      featureValue /= normValue;\n    }\n\n    if(featureValue <= colorInfo.stops[0].value){\n      return colorInfo.stops[0].color;\n    }\n    var lastStop = colorInfo.stops[colorInfo.stops.length - 1];\n    if(featureValue >= lastStop.value){\n      return lastStop.color;\n    }\n\n    //go through the stops to find min and max\n    for(var i=0; i<colorInfo.stops.length; i++){\n      var stopInfo = colorInfo.stops[i];\n\n      if(stopInfo.value <= featureValue){\n        lowerBoundColor = stopInfo.color;\n        lowerBound = stopInfo.value;\n\n      }else if(stopInfo.value > featureValue){\n        upperBoundColor = stopInfo.color;\n        upperBound = stopInfo.value;\n        break;\n      }\n    }\n\n    //feature falls between two stops, interplate the colors\n    if(!isNaN(lowerBound) && !isNaN(upperBound)){\n      var range = upperBound - lowerBound;\n      if(range > 0){\n        //more weight the further it is from the lower bound\n        var upperBoundColorWeight = (featureValue - lowerBound) / range;\n        if(upperBoundColorWeight){\n          //more weight the further it is from the upper bound\n          var lowerBoundColorWeight = (upperBound - featureValue) / range;\n          if(lowerBoundColorWeight){\n\n            //interpolate the lower and upper bound color by applying the\n            //weights to each of the rgba colors and adding them together\n            var interpolatedColor = [];\n            for(var j=0; j<4; j++){\n              interpolatedColor[j] = Math.round(lowerBoundColor[j] * lowerBoundColorWeight + upperBoundColor[j] * upperBoundColorWeight); \n            }\n            return interpolatedColor;\n          } else {\n            //no difference between featureValue and upperBound, 100% of upperBoundColor\n            return upperBoundColor;\n          }\n        } else {\n          //no difference between featureValue and lowerBound, 100% of lowerBoundColor\n          return lowerBoundColor;\n        }\n      }\n    }\n    //if we get to here, none of the cases apply so return null\n    return null;\n  }\n});\n","EsriLeafletRenderers.PointSymbol = EsriLeafletRenderers.Symbol.extend({\n  statics: {\n    MARKERTYPES:  ['esriSMSCircle','esriSMSCross', 'esriSMSDiamond', 'esriSMSSquare', 'esriSMSX', 'esriPMS']\n  },\n  initialize: function(symbolJson, options){\n    EsriLeafletRenderers.Symbol.prototype.initialize.call(this, symbolJson, options);\n    if(options) {\n      this.serviceUrl = options.url;\n    }\n    if(symbolJson){\n      if(symbolJson.type === 'esriPMS'){\n        var url = this.serviceUrl + 'images/' + this._symbolJson.url;\n        this._iconUrl = options && options.token ? url + '?token=' + options.token : url;\n        //leaflet does not allow resizing icons so keep a hash of different\n        //icon sizes to try and keep down on the number of icons created\n        this._icons = {};\n        //create base icon\n        this.icon = this._createIcon(this._symbolJson);\n      } else {\n        this._fillStyles();\n      }\n    }\n  },\n\n  _fillStyles: function(){\n    if(this._symbolJson.outline && this._symbolJson.size > 0){\n      this._styles.stroke = true;\n      this._styles.weight = this.pixelValue(this._symbolJson.outline.width);\n      this._styles.color = this.colorValue(this._symbolJson.outline.color);\n      this._styles.opacity = this.alphaValue(this._symbolJson.outline.color);\n    }else{\n      this._styles.stroke = false;\n    }\n    if(this._symbolJson.color){\n      this._styles.fillColor = this.colorValue(this._symbolJson.color);\n      this._styles.fillOpacity = this.alphaValue(this._symbolJson.color);\n    } else {\n      this._styles.fillOpacity = 0;\n    }\n\n    if(this._symbolJson.style === 'esriSMSCircle'){\n      this._styles.radius = this.pixelValue(this._symbolJson.size) / 2.0;\n    }\n  },\n\n  _createIcon: function(options){\n    var width = this.pixelValue(options.width);\n    var height = width;\n    if(options.height){\n      height = this.pixelValue(options.height);\n    }\n    var xOffset = width / 2.0;\n    var yOffset = height / 2.0;\n\n\n    if(options.xoffset){\n       xOffset += this.pixelValue(options.xoffset);\n    }\n    if(options.yoffset){\n      yOffset += this.pixelValue(options.yoffset);\n    }\n\n    var icon = L.icon({\n      iconUrl: this._iconUrl,\n      iconSize: [width, height],\n      iconAnchor: [xOffset, yOffset]\n    });\n    this._icons[options.width.toString()] = icon;\n    return icon;\n  },\n\n  _getIcon: function(size) {\n    //check to see if it is already created by size\n    var icon = this._icons[size.toString()];\n    if(!icon){\n      icon = this._createIcon({width: size});\n    }\n    return icon;\n  },\n\n  pointToLayer: function(geojson, latlng, visualVariables){\n    var size = this._symbolJson.size || this._symbolJson.width;\n    if(!this._isDefault){\n      if( visualVariables.sizeInfo) {\n        var calculatedSize = this.getSize(geojson, visualVariables.sizeInfo);\n        if (calculatedSize) {\n          size = calculatedSize;\n        }\n      }\n      if(visualVariables.colorInfo){\n        var color = this.getColor(geojson, visualVariables.colorInfo);\n        if(color){\n          this._styles.fillColor = this.colorValue(color);\n          this._styles.fillOpacity = this.alphaValue(color);\n        }\n      }\n    }\n\n    if (this._symbolJson.type === 'esriPMS'){\n      return L.marker(latlng, {icon: this._getIcon(size)});\n    }\n    size = this.pixelValue(size);\n\n    switch(this._symbolJson.style){\n      case 'esriSMSSquare':\n        return EsriLeafletRenderers.squareMarker(latlng, size, this._styles);\n      case 'esriSMSDiamond':\n        return EsriLeafletRenderers.diamondMarker(latlng, size, this._styles);\n      case 'esriSMSCross':\n        return EsriLeafletRenderers.crossMarker(latlng, size, this._styles);\n      case 'esriSMSX':\n        return EsriLeafletRenderers.xMarker(latlng, size, this._styles);\n    }\n    this._styles.radius = size / 2.0;\n    return L.circleMarker(latlng, this._styles);\n  }\n});\nEsriLeafletRenderers.pointSymbol = function(symbolJson, options){\n  return new EsriLeafletRenderers.PointSymbol(symbolJson, options);\n};\n","EsriLeafletRenderers.LineSymbol = EsriLeafletRenderers.Symbol.extend({\n  statics: {\n    //Not implemented 'esriSLSNull'\n    LINETYPES:  ['esriSLSDash','esriSLSDot','esriSLSDashDotDot','esriSLSDashDot','esriSLSSolid']\n  },\n  initialize: function(symbolJson, options){\n    EsriLeafletRenderers.Symbol.prototype.initialize.call(this, symbolJson, options);\n    this._fillStyles();\n  },\n\n  _fillStyles: function(){\n    //set the defaults that show up on arcgis online\n    this._styles.lineCap = 'butt';\n    this._styles.lineJoin = 'miter';\n    this._styles.fill = false;\n\n    if (!this._symbolJson){\n      return;\n    }\n\n    if(this._symbolJson.color ){\n      this._styles.color = this.colorValue(this._symbolJson.color);\n      this._styles.opacity = this.alphaValue(this._symbolJson.color);\n    }\n\n    if(this._symbolJson.width){\n      this._styles.weight = this.pixelValue(this._symbolJson.width);\n      \n      var dashValues = [];\n\n      switch(this._symbolJson.style){\n        case 'esriSLSDash':\n          dashValues = [4,3];\n          break;\n        case 'esriSLSDot':\n          dashValues = [1,3];\n          break;\n        case 'esriSLSDashDot':\n          dashValues = [8,3,1,3];\n          break;\n        case 'esriSLSDashDotDot':\n          dashValues = [8,3,1,3,1,3];\n          break;\n      }\n\n      //use the dash values and the line weight to set dash array\n      if (dashValues.length > 0) {\n        for (var i = 0; i < dashValues.length; i++){\n          dashValues[i] *= this._styles.weight;\n        }\n\n        this._styles.dashArray = dashValues.join(',');\n      }\n    }\n  },\n\n  style: function(feature, visualVariables){\n    if(!this._isDefault && visualVariables){\n      if(visualVariables.sizeInfo){\n        var calculatedSize = this.pixelValue(this.getSize(feature, visualVariables.sizeInfo));\n        if (calculatedSize) {\n          this._styles.weight = calculatedSize;\n        }\n      }\n      if(visualVariables.colorInfo){\n        var color = this.getColor(feature, visualVariables.colorInfo);\n        if(color){\n          this._styles.color = this.colorValue(color);\n          this._styles.opacity = this.alphaValue(color);\n        }\n      }\n    }\n    return this._styles;\n  }\n});\nEsriLeafletRenderers.lineSymbol = function(symbolJson, options){\n  return new EsriLeafletRenderers.LineSymbol(symbolJson, options);\n};\n","EsriLeafletRenderers.PolygonSymbol = EsriLeafletRenderers.Symbol.extend({\n  statics: {\n    //not implemented: 'esriSFSBackwardDiagonal','esriSFSCross','esriSFSDiagonalCross','esriSFSForwardDiagonal','esriSFSHorizontal','esriSFSNull','esriSFSVertical'\n    POLYGONTYPES:  ['esriSFSSolid']\n  },\n  initialize: function(symbolJson, options){\n    EsriLeafletRenderers.Symbol.prototype.initialize.call(this, symbolJson, options);\n    if (symbolJson){\n      this._lineStyles = EsriLeafletRenderers.lineSymbol(symbolJson.outline, options).style();\n      this._fillStyles();\n    }\n  },\n\n  _fillStyles: function(){\n    if (this._lineStyles) {\n      if (this._lineStyles.weight === 0){\n        //when weight is 0, setting the stroke to false can still look bad\n        //(gaps between the polygons)\n        this._styles.stroke = false;\n      } else {\n        //copy the line symbol styles into this symbol's styles\n        for (var styleAttr in this._lineStyles){\n          this._styles[styleAttr] = this._lineStyles[styleAttr];\n        }\n      }\n    }\n\n    //set the fill for the polygon\n    if (this._symbolJson) {\n      if (this._symbolJson.color &&\n          //don't fill polygon if type is not supported\n          EsriLeafletRenderers.PolygonSymbol.POLYGONTYPES.indexOf(this._symbolJson.style >= 0)) {\n\n        this._styles.fill = true;\n        this._styles.fillColor = this.colorValue(this._symbolJson.color);\n        this._styles.fillOpacity = this.alphaValue(this._symbolJson.color);\n      } else {\n        this._styles.fill = false;\n        this._styles.fillOpacity = 0;\n      }\n    }\n\n  },\n\n  style: function(feature, visualVariables) {\n    if(!this._isDefault && visualVariables && visualVariables.colorInfo){\n      var color = this.getColor(feature, visualVariables.colorInfo);\n      if(color){\n        this._styles.fillColor = this.colorValue(color);\n        this._styles.fillOpacity = this.alphaValue(color);\n      }\n    }\n    return this._styles;\n  }\n});\nEsriLeafletRenderers.polygonSymbol = function(symbolJson, options){\n  return new EsriLeafletRenderers.PolygonSymbol(symbolJson, options);\n};\n","EsriLeafletRenderers.Renderer = L.Class.extend({\n\n  options: {\n    proportionalPolygon: false,\n    clickable: true\n  },\n\n  initialize: function(rendererJson, options){\n    this._rendererJson = rendererJson;\n    this._pointSymbols = false;\n    this._symbols = [];\n    this._visualVariables = this._parseVisualVariables(rendererJson.visualVariables);\n    L.Util.setOptions(this, options);\n  },\n\n  _parseVisualVariables: function(visualVariables){\n    var visVars = {};\n    if (visualVariables) {\n      for (var i = 0; i < visualVariables.length; i++){\n        visVars[visualVariables[i].type] = visualVariables[i];\n      }\n    }\n    return visVars;\n  },\n\n  _createDefaultSymbol: function(){\n    if(this._rendererJson.defaultSymbol){\n      this._defaultSymbol = this._newSymbol(this._rendererJson.defaultSymbol);\n      this._defaultSymbol._isDefault = true;\n    }\n  },\n\n  _newSymbol: function(symbolJson){\n    if(symbolJson.type === 'esriSMS' || symbolJson.type === 'esriPMS'){\n      this._pointSymbols = true;\n      return EsriLeafletRenderers.pointSymbol(symbolJson, this.options);\n    }\n    if(symbolJson.type === 'esriSLS'){\n      return EsriLeafletRenderers.lineSymbol(symbolJson, this.options);\n    }\n    if(symbolJson.type === 'esriSFS'){\n      return EsriLeafletRenderers.polygonSymbol(symbolJson, this.options);\n    }\n  },\n\n  _getSymbol: function(){\n    //override\n  },\n\n  attachStylesToLayer: function(layer){\n    if(this._pointSymbols){\n      layer.options.pointToLayer = L.Util.bind(this.pointToLayer, this);\n    } else {\n      layer.options.style = L.Util.bind(this.style, this);\n    }\n  },\n\n  pointToLayer: function(geojson, latlng){\n    var sym = this._getSymbol(geojson);\n    if(sym && sym.pointToLayer){\n      return sym.pointToLayer(geojson, latlng, this._visualVariables);\n    }\n    //invisible symbology\n    return L.circleMarker(latlng, {radius: 0, opacity: 0});\n  },\n\n  style: function(feature){\n    //find the symbol to represent this feature\n    var sym = this._getSymbol(feature);\n    if(sym){\n      return sym.style(feature, this._visualVariables);\n    }else{\n      //invisible symbology\n      return {opacity: 0, fillOpacity: 0};\n    }\n  }\n});\n","EsriLeafletRenderers.SimpleRenderer = EsriLeafletRenderers.Renderer.extend({\n\n  initialize: function(rendererJson, options){\n    EsriLeafletRenderers.Renderer.prototype.initialize.call(this, rendererJson, options);\n    this._createSymbol();\n  },\n\n  _createSymbol: function(){\n    if(this._rendererJson.symbol){\n      this._symbols.push(this._newSymbol(this._rendererJson.symbol));\n    }\n  },\n\n  _getSymbol: function(){\n    return this._symbols[0];\n  }\n});\n\nEsriLeafletRenderers.simpleRenderer = function(rendererJson, options){\n  return new EsriLeafletRenderers.SimpleRenderer(rendererJson, options);\n};\n","EsriLeafletRenderers.ClassBreaksRenderer = EsriLeafletRenderers.Renderer.extend({\n\n  initialize: function(rendererJson, options){\n    EsriLeafletRenderers.Renderer.prototype.initialize.call(this, rendererJson, options);\n    this._field = this._rendererJson.field;\n    if (this._rendererJson.normalizationType && this._rendererJson.normalizationType === 'esriNormalizeByField'){\n      this._normalizationField = this._rendererJson.normalizationField;\n    }\n    this._createSymbols();\n  },\n\n  _createSymbols: function(){\n    var symbol,\n        classbreaks = this._rendererJson.classBreakInfos;\n\n    this._symbols = [];\n\n    //create a symbol for each class break\n    for (var i = classbreaks.length  - 1; i >= 0; i--){\n      if(this.options.proportionalPolygon && this._rendererJson.backgroundFillSymbol){\n        symbol = this._newSymbol(this._rendererJson.backgroundFillSymbol);\n      } else {\n        symbol = this._newSymbol(classbreaks[i].symbol);\n      }\n      symbol.val = classbreaks[i].classMaxValue;\n      this._symbols.push(symbol);\n    }\n    //sort the symbols in ascending value\n    this._symbols.sort(function(a, b){\n      return a.val > b.val ? 1 : -1;\n    });\n    this._createDefaultSymbol();\n    this._maxValue = this._symbols[this._symbols.length - 1].val;\n  },\n\n  _getSymbol: function(feature){\n    var val = feature.properties[this._field];\n    if (this._normalizationField){\n      var normValue = feature.properties[this._normalizationField];\n      if (!isNaN(normValue) && normValue !== 0) {\n        val = val / normValue;\n      } else {\n        return this._defaultSymbol;\n      }\n    }\n\n    if(val > this._maxValue){\n      return this._defaultSymbol;\n    }\n    var symbol = this._symbols[0];\n    for (var i = this._symbols.length - 1; i >= 0; i--){\n      if(val > this._symbols[i].val){\n        break;\n      }\n      symbol = this._symbols[i];\n    }\n    return symbol;\n  }\n});\n\nEsriLeafletRenderers.classBreaksRenderer = function(rendererJson, options){\n  return new EsriLeafletRenderers.ClassBreaksRenderer(rendererJson, options);\n};\n","EsriLeafletRenderers.UniqueValueRenderer = EsriLeafletRenderers.Renderer.extend({\n\n  initialize: function(rendererJson, options){\n    EsriLeafletRenderers.Renderer.prototype.initialize.call(this, rendererJson, options);\n\n    this._field = this._rendererJson.field1;\n    this._createSymbols();\n  },\n\n  _createSymbols: function(){\n    var symbol, uniques = this._rendererJson.uniqueValueInfos;\n\n    //create a symbol for each unique value\n    for (var i = uniques.length  - 1; i >= 0; i--){\n      symbol = this._newSymbol(uniques[i].symbol);\n      symbol.val = uniques[i].value;\n      this._symbols.push(symbol);\n    }\n    this._createDefaultSymbol();\n  },\n\n  /* jshint ignore:start */\n  _getSymbol: function(feature){\n    var val = feature.properties[this._field];\n    //accumulate values if there is more than one field defined\n    if (this._rendererJson.fieldDelimiter && this._rendererJson.field2) {\n      var val2 = feature.properties[this._rendererJson.field2];\n      if (val2) {\n        val += this._rendererJson.fieldDelimiter + val2;\n        var val3 = feature.properties[this._rendererJson.field3];\n        if (val3) {\n          val += this._rendererJson.fieldDelimiter + val3;\n        }\n      }\n    }\n\n    var symbol = this._defaultSymbol;\n    for (var i = this._symbols.length  - 1; i >= 0; i--){\n      //using the === operator does not work if the field\n      //of the unique renderer is not a string\n      if(this._symbols[i].val == val){\n        symbol = this._symbols[i];\n      }\n    }\n    return symbol;\n  }\n  /* jshint ignore:end */\n});\n\nEsriLeafletRenderers.uniqueValueRenderer = function(rendererJson, options){\n  return new EsriLeafletRenderers.UniqueValueRenderer(rendererJson, options);\n};\n","EsriLeafletRenderers.SquareMarker = L.Path.extend({\n  options: {\n    fill: true\n  },\n\n  initialize: function(center, size, options){\n    L.Path.prototype.initialize.call(this, options);\n    this._size = size;\n    this._center = center;\n  },\n\n  projectLatlngs: function(){\n    this._point = this._map.latLngToLayerPoint(this._center);\n  },\n\n  getPathString: function(){\n    if (!this._map){\n      return '';\n    }\n\n    var center = this._point,\n        offset = this._size / 2.0;\n\n    if(L.Path.VML){\n      center._round();\n      offset = Math.round(offset);\n    }\n\n    var str = 'M' + (center.x + offset) + ',' + (center.y + offset) +\n      'L' + (center.x - offset) + ',' + (center.y + offset) +\n      'L' + (center.x - offset) + ',' + (center.y - offset) +\n      'L' + (center.x + offset) + ',' + (center.y - offset);\n\n    return str + (L.Browser.svg ? 'z' : 'x');\n  },\n\n  setLatLng: function(latlng){\n    this._center = latlng;\n    return this.redraw();\n  },\n\n  getLatLng: function(){\n    return L.latLng(this._center);\n  },\n\n  getSize: function(){\n    return this._size;\n  },\n\n  setSize: function(size){\n    this._size = size;\n    return this.redraw();\n  }\n});\n\nEsriLeafletRenderers.squareMarker = function(center, size, options){\n  return new EsriLeafletRenderers.SquareMarker(center, size, options);\n};\n","EsriLeafletRenderers.DiamondMarker = L.Path.extend({\n  options: {\n    fill: true\n  },\n\n  initialize: function(center, size, options){\n    L.Path.prototype.initialize.call(this, options);\n    this._size = size;\n    this._center = center;\n  },\n\n  projectLatlngs: function(){\n    this._point = this._map.latLngToLayerPoint(this._center);\n  },\n\n  getPathString: function(){\n    if (!this._map){\n      return '';\n    }\n\n    var center = this._point,\n        offset = this._size / 2.0;\n\n    if(L.Path.VML){\n      center._round();\n      offset = Math.round(offset);\n    }\n\n    var str = 'M' + center.x + ',' + (center.y + offset) +\n      'L' + (center.x - offset) + ',' + center.y +\n      'L' + center.x + ',' + (center.y - offset) +\n      'L' + (center.x + offset) + ',' + center.y;\n\n    return str + (L.Browser.svg ? 'z' : 'x');\n  },\n\n  setLatLng: function(latlng){\n    this._center = latlng;\n    return this.redraw();\n  },\n\n  getLatLng: function(){\n    return L.latLng(this._center);\n  },\n\n  getSize: function(){\n    return this._size;\n  },\n\n  setSize: function(size){\n    this._size = size;\n    return this.redraw();\n  }\n});\n\nEsriLeafletRenderers.diamondMarker = function(center, size, options){\n  return new EsriLeafletRenderers.DiamondMarker(center, size, options);\n};\n","EsriLeafletRenderers.CrossMarker = L.Path.extend({\n  initialize: function (center, size, options){\n    L.Path.prototype.initialize.call(this, options);\n    this._size = size;\n    this._center = center;\n  },\n\n  projectLatlngs: function(){\n    this._point = this._map.latLngToLayerPoint(this._center);\n  },\n\n  getPathString: function(){\n    if (!this._map){\n      return '';\n    }\n\n    var center = this._point,\n        offset = this._size / 2.0;\n\n    if(L.Path.VML){\n      center._round();\n      offset = Math.round(offset);\n    }\n\n    return 'M' + center.x + ',' + (center.y + offset) +\n      'L' + center.x + ',' + (center.y - offset) +\n      'M' + (center.x - offset) + ',' + center.y +\n      'L' + (center.x + offset) + ',' + center.y;\n  },\n\n  setLatLng: function(latlng){\n    this._center = latlng;\n    return this.redraw();\n  },\n\n  getLatLng: function(){\n    return L.latLng(this._center);\n  },\n\n  getSize: function(){\n    return this._size;\n  },\n\n  setSize: function(size){\n    this._size = size;\n    return this.redraw();\n  }\n});\n\nEsriLeafletRenderers.crossMarker = function(center, size, options){\n  return new EsriLeafletRenderers.CrossMarker(center, size, options);\n};\n","EsriLeafletRenderers.XMarker = L.Path.extend({\n  initialize: function(center, size, options){\n    L.Path.prototype.initialize.call(this, options);\n    this._size = size;\n    this._center = center;\n  },\n\n  projectLatlngs: function(){\n    this._point = this._map.latLngToLayerPoint(this._center);\n  },\n\n  getPathString: function(){\n    if (!this._map){\n      return '';\n    }\n\n    var center = this._point,\n        offset = this._size / 2.0;\n\n    if(L.Path.VML){\n      center._round();\n      offset = Math.round(offset);\n    }\n\n    return 'M' + (center.x + offset) + ',' + (center.y + offset) +\n      'L' + (center.x - offset) + ',' + (center.y - offset) +\n      'M' + (center.x - offset) + ',' + (center.y + offset) +\n      'L' + (center.x + offset) + ',' + (center.y - offset);\n  },\n\n  setLatLng: function(latlng){\n    this._center = latlng;\n    return this.redraw();\n  },\n\n  getLatLng: function(){\n    return L.latLng(this._center);\n  },\n\n  getSize: function(){\n    return this._size;\n  },\n\n  setSize: function(size){\n    this._size = size;\n    return this.redraw();\n  }\n});\n\nEsriLeafletRenderers.xMarker = function(center, size, options){\n  return new EsriLeafletRenderers.XMarker(center, size, options);\n};\n","var initializeRenderers = function() {\n  var oldOnAdd = L.Util.bind(this.onAdd, this);\n  var oldUnbindPopup = L.Util.bind(this.unbindPopup, this);\n  var oldOnRemove = L.Util.bind(this.onRemove, this);\n  L.Util.bind(this.createNewLayer, this);\n\n  this.metadata(function(error, response) {\n    if(error) {\n      return;\n    }\n    if(response && response.drawingInfo && !this.options.style){\n      this._setRenderers(response);\n    }\n\n    this._metadataLoaded = true;\n    if(this._loadedMap){\n      oldOnAdd(this._loadedMap);\n      this._addPointLayer(this._loadedMap);\n    }\n  }, this);\n\n  this.onAdd = function(map){\n\n    this._loadedMap = map;\n    if(this._metadataLoaded){\n      oldOnAdd(this._loadedMap);\n      this._addPointLayer(this._loadedMap);\n    }\n  };\n\n  this.onRemove = function(map){\n    oldOnRemove(map);\n    if(this._pointLayer){\n      var pointLayers = this._pointLayer.getLayers();\n      for(var i in pointLayers){\n        map.removeLayer(pointLayers[i]);\n      }\n    }\n  };\n\n  this.unbindPopup = function(){\n    oldUnbindPopup();\n    if(this._pointLayer){\n      var pointLayers = this._pointLayer.getLayers();\n      for(var i in pointLayers){\n        pointLayers[i].unbindPopup();\n      }\n    }\n  };\n\n  this._addPointLayer = function(map){\n    if(this._pointLayer){\n      this._pointLayer.addTo(map);\n      this._pointLayer.bringToFront();\n    }\n  };\n\n  this._createPointLayer = function(){\n    if(!this._pointLayer){\n      this._pointLayer = L.geoJson();\n      //store the feature ids that have already been added to the map\n      this._pointLayerIds = {};\n\n      if(this._popup){\n        var popupFunction = function (feature, layer) {\n          layer.bindPopup(this._popup(feature, layer), this._popupOptions);\n        };\n        this._pointLayer.options.onEachFeature = L.Util.bind(popupFunction, this);\n      }\n    }\n  };\n\n  this.createNewLayer = function(geojson){\n\n    var fLayer = L.GeoJSON.geometryToLayer(geojson, this.options.pointToLayer, L.GeoJSON.coordsToLatLng, this.options);\n\n    //add a point layer when the polygon is represented as proportional marker symbols\n    if(this._hasProportionalSymbols){\n      var centroid = this.getPolygonCentroid(geojson.geometry.coordinates);\n      if(!(isNaN(centroid[0]) || isNaN(centroid[0]))){\n        this._createPointLayer();\n\n        var featureId = geojson.id.toString();\n        //only add the feature if it does not already exist on the map\n        if(!this._pointLayerIds[featureId]){\n          var pointjson = this.getPointJson(geojson, centroid);\n\n          this._pointLayer.addData(pointjson);\n          this._pointLayerIds[featureId] = true;\n        }\n\n        this._pointLayer.bringToFront();\n      }\n    }\n    return fLayer;\n  };\n\n  this.getPolygonCentroid = function(coordinates){\n    var pts = coordinates[0][0];\n    if(pts.length === 2){\n      pts = coordinates[0];\n    }\n\n\n    var twicearea=0,\n    x=0, y=0,\n    nPts = pts.length,\n    p1, p2, f;\n\n    for (var i=0, j=nPts-1 ;i<nPts;j=i++) {\n      p1=pts[i]; p2=pts[j];\n      twicearea+=p1[0]*p2[1];\n      twicearea-=p1[1]*p2[0];\n      f=p1[0]*p2[1]-p2[0]*p1[1];\n      x+=(p1[0]+p2[0])*f;\n      y+=(p1[1]+p2[1])*f;\n    }\n    f=twicearea*3;\n    return [x/f,y/f];\n  };\n\n  this.getPointJson = function(geojson, centroid){\n    return {\n      type: 'Feature',\n      properties: geojson.properties,\n      id: geojson.id,\n      geometry: {\n        type: 'Point',\n        coordinates: [centroid[0],centroid[1]]\n      }\n    };\n  };\n\n  this._checkForProportionalSymbols = function(geometryType, renderer){\n    this._hasProportionalSymbols = false;\n    if(geometryType === 'esriGeometryPolygon'){\n      if(renderer.backgroundFillSymbol){\n        this._hasProportionalSymbols = true;\n      }\n      //check to see if the first symbol in the classbreaks is a marker symbol\n      if(renderer.classBreakInfos && renderer.classBreakInfos.length){\n\n        var sym = renderer.classBreakInfos[0].symbol;\n        if(sym && (sym.type === 'esriSMS' || sym.type === 'esriPMS')){\n          this._hasProportionalSymbols = true;\n        }\n      }\n    }\n  };\n\n  this._setRenderers = function(geojson){\n    var rend,\n    rendererInfo = geojson.drawingInfo.renderer,\n    options = {\n        url: this.url ? this.url : this._service.options.url,\n        token: this._service.options.token\n    };\n    if(geojson.drawingInfo.transparency) {\n      options.layerTransparency = geojson.drawingInfo.transparency;\n    }\n\n    switch(rendererInfo.type){\n      case 'classBreaks':\n        this._checkForProportionalSymbols(geojson.geometryType, rendererInfo);\n        if(this._hasProportionalSymbols){\n          this._createPointLayer();\n          var pRend = EsriLeafletRenderers.classBreaksRenderer(rendererInfo, options);\n          pRend.attachStylesToLayer(this._pointLayer);\n          options.proportionalPolygon = true;\n        }\n        rend = EsriLeafletRenderers.classBreaksRenderer(rendererInfo, options);\n        break;\n      case 'uniqueValue':\n        rend = EsriLeafletRenderers.uniqueValueRenderer(rendererInfo, options);\n        break;\n      default:\n        rend = EsriLeafletRenderers.simpleRenderer(rendererInfo, options);\n    }\n    rend.attachStylesToLayer(this);\n  };\n};\n\nEsri.FeatureLayer.addInitHook(initializeRenderers);\nif (Esri.ClusteredFeatureLayer) {\n  Esri.ClusteredFeatureLayer.addInitHook(initializeRenderers);\n}\n"]}